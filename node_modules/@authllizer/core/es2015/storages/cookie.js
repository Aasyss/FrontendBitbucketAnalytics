import { MemoryStorage } from './memory';
import isFunction from '../utils/is-function';
export class CookieStorage extends MemoryStorage {
    constructor(options) {
        super(options);
    }
    getToken() {
        let result;
        try {
            let items = document.cookie.split(';');
            let { length } = items;
            for (let i = 0; i < length; i++) {
                let [key, value] = items[i].split('=');
                if (key.trim() === this.key) {
                    result = value;
                    break;
                }
            }
        }
        catch (e) {
            result = super.getToken();
        }
        return result;
    }
    setToken(token) {
        let expire = token.expire || (isFunction(this.expire) ? this.expire() : this.expire);
        this._setToken(token, expire);
    }
    removeToken() {
        this._setToken('', 0);
    }
    _setToken(token, expire) {
        try {
            document.cookie = [
                `${this.key}=${token}`,
                expire ? `expires=${new Date(expire).toUTCString()}` : '',
                this.path ? `path=${this.path}` : ''
            ].join(';');
        }
        catch (e) {
            super.setToken(token);
        }
    }
}
//# sourceMappingURL=cookie.js.map