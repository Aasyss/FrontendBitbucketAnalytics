import parseQuery from '../utils/parse-query';
import extend from '../utils/extend';
import extendClass from '../utils/extend-class';
export class BaseDialog {
    constructor(name, redirectUri, displayOptions) {
        this.name = this.name || name;
        this.redirectUri = this.redirectUri || redirectUri;
        this.setDisplayOptions(displayOptions);
    }
    static parseUrl(url) {
        let location = document.createElement('a');
        location.href = url;
        if (location.search || location.hash) {
            let query = parseQuery(location.search.substring(1).replace(/\/$/, ''));
            let hash = parseQuery(location.hash.substring(1).replace(/[\/$]/, ''));
            return extend({}, query, hash);
        }
        else {
            throw new Error('OAuth redirect has occurred but no query or hash parameters were found. ' +
                'They were either not set during the redirect, or were removed—typically by a ' +
                'routing library—before Authllizer could read it.');
        }
    }
    setDisplayOptions(...displayOptions) {
        this.displayOptions = extend(this.displayOptions, ...displayOptions);
    }
}
BaseDialog.extend = extendClass;
//# sourceMappingURL=base.js.map