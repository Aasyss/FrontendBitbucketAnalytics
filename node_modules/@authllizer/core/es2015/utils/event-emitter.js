import forEach from './for-each';
import isFunction from './is-function';
export default class EventEmitter {
    constructor(...listeners) {
        this._listeners = [];
        this.on(...listeners);
    }
    emit(value) {
        forEach(this._listeners, (listener) => {
            listener(value);
        });
        return this;
    }
    on(...listeners) {
        forEach(listeners, (listener) => {
            if (isFunction(listener)) {
                this._listeners.push(listener);
            }
        });
        return this;
    }
    remove(...listeners) {
        forEach(listeners, (listener) => {
            let index = this._listeners.indexOf(listener);
            if (index > -1) {
                this._listeners.splice(index, 1);
            }
        });
        return this;
    }
}
//# sourceMappingURL=event-emitter.js.map