{"version":3,"file":"authllizer-core.umd.js","sources":["../src/adapters/adapter.ts","../src/utils/is-object.ts","../src/utils/create-merge.ts","../src/utils/merge.ts","../src/utils/extend-class.ts","../src/utils/is-string.ts","../src/utils/is-defined.ts","../src/utils/get.ts","../src/utils/join-url.ts","../src/adapters/backend.ts","../src/utils/for-each.ts","../src/utils/parse-query.ts","../src/utils/extend.ts","../src/dialogs/base.ts","../src/utils/normalize-location.ts","../src/utils/is-function.ts","../src/utils/is-regexp.ts","../src/storages/memory.ts","../src/storages/local.ts","../src/utils/decode-base64.ts","../src/tokens/jwt.ts","../src/utils/stringify-query.ts","../src/utils/extend-url-query.ts","../src/http/base.ts","../src/http/fetch.ts","../src/config.ts","../src/dialogs/popup.ts","../src/dialogs/browser.ts","../src/providers/base.ts","../src/providers/oauth1.ts","../src/utils/random-string.ts","../src/utils/camel-case.ts","../src/providers/oauth2.ts","../src/storages/cookie.ts","../src/storages/session.ts","../src/utils/event-emitter.ts","../src/authllizer.ts","../src/index.ts"],"sourcesContent":["import {Directory} from '../interface';\r\nimport {IToken} from '../tokens/token';\r\nimport {IHttpClient} from '../http/http';\r\n\r\nexport interface IAdapterRequestOptions {\r\n    type?: AdapterRequestType;\r\n    data?: Directory<any>;\r\n    extractToken?: boolean;\r\n    token?: IToken;\r\n    provider?: string;\r\n}\r\n\r\nexport enum AdapterRequestType {\r\n    signIn = 'signIn',\r\n    signUp = 'signUp',\r\n    signOut = 'signOut',\r\n    authenticate = 'authenticate',\r\n    link = 'link',\r\n    unlink = 'unlink',\r\n    refresh = 'refresh'\r\n}\r\n\r\nexport interface IAdapterResponse<T> {\r\n    response?: T;\r\n    token?: string;\r\n}\r\n\r\nexport interface IAdapterConstructor {\r\n    new(httpClient: IHttpClient): IAdapter;\r\n\r\n    readonly prototype: IAdapter;\r\n}\r\n\r\nexport interface IAdapter {\r\n    request<T>(IAdapterRequestOptions): Promise<IAdapterResponse<T>>;\r\n}\r\n","export default function isObject(value: any): boolean {\r\n    return typeof value === 'object';\r\n}\r\n","import isObject from './is-object';\n\nexport default function createMerge(level: number = Infinity) {\n    return (target: { [key: string]: any } = {}, ...sources: { [key: string]: any }[]): { [key: string]: any } => {\n        let {length: sourcesLength} = sources;\n        for (let i = 0; i < sourcesLength; i++) {\n            let source = sources[i] || {};\n            let keys = Object.keys(source);\n            let {length: keysLength} = keys;\n            for (let j = 0; j < keysLength; j++) {\n                let key = keys[j];\n                let value = source[key];\n                if (level && isObject(value) && !Array.isArray(value) && isObject(target[key]) && !Array.isArray(target[key])) {\n                    value = createMerge(--level)({}, target[key], value);\n                }\n                target[key] = value;\n            }\n        }\n        return target;\n    };\n}\n","import createMerge from './create-merge';\n\nlet merge = createMerge();\nexport default merge;\n","import merge from './merge';\n\nexport default function extendClass(this: any, options: any): any {\n    return class extends (this as ({new (...args)})) {\n        constructor(...args: any[]) {\n            super(...args);\n            merge(this, options);\n        }\n    };\n}\n","export default function isString(value: any): boolean {\r\n    return typeof value === 'string';\r\n}\r\n","export default function isDefined(value: any): boolean {\r\n    return value !== undefined && value !== null;\r\n}\r\n","\r\n\r\nimport isDefined from './is-defined';\r\n\r\nexport default function get<T>(object: { [key: string]: any }, path?: string, defaultValue?: T) {\r\n    if (!isDefined(path) || path === '') { return object; }\r\n    let keys = `${path}`.split('.');\r\n    let {length} = keys;\r\n    let result = object;\r\n    for (let i = 0; i < length; i++) {\r\n        let key = keys[i];\r\n        try {\r\n            result = result[key];\r\n        } catch (e) {\r\n            return defaultValue;\r\n        }\r\n    }\r\n    return (result !== void 0 ? result :  defaultValue) as T | any;\r\n}\r\n","export default function joinUrl(baseUrl: string, url: string) {\r\n    if (/^(?:[a-z]+:)?\\/\\//i.test(url)) {\r\n        return url;\r\n    }\r\n    let joined = [baseUrl, url].join('/');\r\n    let normalize = (str: string) => {\r\n        return str\r\n            .replace(/[\\/]+/g, '/')\r\n            .replace(/\\/\\?/g, '?')\r\n            .replace(/\\/\\#/g, '#')\r\n            .replace(/\\:\\//g, '://');\r\n    };\r\n    return normalize(joined);\r\n}\r\n","import merge from '../utils/merge';\nimport extendClass from '../utils/extend-class';\nimport isString from '../utils/is-string';\nimport get from '../utils/get';\nimport joinUrl from '../utils/join-url';\nimport {IAdapter, IAdapterResponse, IAdapterRequestOptions} from './adapter';\nimport {Directory} from '../interface';\nimport {IHttpClient, IHttpRequestOptions} from '../http/http';\n\nexport interface IBackendAdapterOptions {\n\n    baseUrl?: string;\n    signIn?: string | IBackendRouteOptions;\n    signOut?: string | IBackendRouteOptions;\n    signUp?: string | IBackendRouteOptions;\n    authenticate?: string | IBackendRouteOptions;\n    link?: string | IBackendRouteOptions;\n    unlink?: string | IBackendRouteOptions;\n    refresh?: string | IBackendRouteOptions;\n\n    /**\n     * default config for the http requests\n     */\n    defaultHttpOptions?: IHttpRequestOptions;\n    /**\n     * for 'authenticate' and 'link' request (if false it will put the provider name in the data)\n     * @default true\n     */\n    providerInUrl?: boolean;\n\n    extractToken?: (response?: any) => string;\n\n    /**\n     * the path of the token in the response for extrcting the token from the response\n     * @default 'access_token'\n     */\n    tokenPath?: string;\n}\n\nexport interface IBackendRouteOptions {\n    url?: string;\n    httpOptions?: IHttpRequestOptions;\n}\n\nexport class BackendAdapter implements IAdapter {\n\n    static extend: (options: IBackendAdapterOptions) => typeof BackendAdapter = extendClass;\n\n    protected baseUrl: string = '/auth';\n\n    protected signIn: string | IBackendRouteOptions = '/signin';\n    protected signOut: string | IBackendRouteOptions = '/signout';\n    protected signUp: string | IBackendRouteOptions = '/signup';\n    protected authenticate: string | IBackendRouteOptions = '';\n    protected link: string | IBackendRouteOptions = '';\n    protected unlink: string | IBackendRouteOptions = '/unlink';\n    protected refresh: string | IBackendRouteOptions = '/refresh';\n\n    protected defaultHttpOptions: IHttpRequestOptions = {\n        method: 'POST',\n        data: {},\n        params: {},\n        headers: {},\n        withCredentials: false\n    };\n\n    protected providerInUrl: boolean = true;\n\n    protected tokenPath: string = 'access_token';\n\n    private _httpClient: IHttpClient;\n\n    constructor(httpClient: IHttpClient) {\n        this._httpClient = httpClient;\n    }\n\n    public request<T>(requestOptions: IAdapterRequestOptions): Promise<IAdapterResponse<T>> {\n        let {extractToken} = requestOptions;\n        let stateOptions: IBackendRouteOptions = this.getDefaultRouteOptions(requestOptions);\n        let url: string = this.prepareUrl(requestOptions, stateOptions);\n        let httpOptions: IHttpRequestOptions = this.prepareOptions(requestOptions, stateOptions);\n\n        return this._httpClient.request<T>(url, httpOptions).then((response: T) => {\n            let adapterResponse: IAdapterResponse<T> = {response};\n            if (extractToken) {\n                adapterResponse.token = this.extractToken(response);\n            }\n            return adapterResponse;\n        });\n    }\n\n    protected prepareUrl({provider}: IAdapterRequestOptions, {url}: IBackendRouteOptions): string {\n        if (provider && this.providerInUrl) {\n            url = joinUrl(url, provider);\n        }\n\n        return this.baseUrl ? joinUrl(this.baseUrl, url) : url;\n    }\n\n    protected prepareOptions({token, provider, data}: IAdapterRequestOptions, {httpOptions: routeHttpOptions}: IBackendRouteOptions): IHttpRequestOptions {\n        let {defaultHttpOptions, providerInUrl} = this;\n\n        let options = {\n            data: {},\n            params: {},\n            headers: {}\n        };\n\n        if (provider && !providerInUrl) {\n            data['provider'] = provider;\n        }\n\n        if (token) {\n            options.headers['Authorization'] = token.toHeader();\n        }\n\n        let extendOptions: IHttpRequestOptions = merge({\n            data: {},\n            params: {},\n            headers: {}\n        }, defaultHttpOptions, routeHttpOptions, options);\n\n        extendOptions.method = isString(extendOptions.method) ? extendOptions.method.toUpperCase() : 'POST';\n\n        return this.prepareData(extendOptions, data);\n    }\n\n    protected getDefaultRouteOptions({type}: IAdapterRequestOptions): IBackendRouteOptions {\n        let options: IBackendRouteOptions = isString(this[type]) ? {url: (this[type] as string)} : (this[type] as IBackendRouteOptions) || {};\n        options.url = isString(options.url) ? options.url : `/${type}`;\n\n        return options;\n    }\n\n    protected prepareData(httpOptions: IHttpRequestOptions, data?: Directory<any>): IHttpRequestOptions {\n        let {method} = httpOptions;\n\n        enum BODY_METHOD {\n            POST,\n            PUT,\n            PATCH\n        }\n\n        if (method in BODY_METHOD) {\n            merge(httpOptions.data, data);\n            // remove data if data empty\n            if (httpOptions.data && !Object.keys(httpOptions.data).length) {\n                delete httpOptions.data;\n            }\n        } else {\n            merge(httpOptions.params, httpOptions.data, data);\n            delete httpOptions.data;\n        }\n\n        return httpOptions;\n    }\n\n    protected extractToken(response: any): string {\n        let {tokenPath} = this;\n        return get(response, tokenPath);\n    }\n\n}\n","export default function forEach(collection: any = [], iteratee: any = (v: any) => v) {\r\n    let objectKeys = !Array.isArray(collection) && Object.keys(collection);\r\n    let {length} = objectKeys ? objectKeys : collection;\r\n    if (!length) {\r\n        return collection;\r\n    }\r\n    let index: number = 0;\r\n    while (index < length) {\r\n        let key = objectKeys ? objectKeys[index++] : index++;\r\n        let value = collection[key];\r\n        iteratee(value, key, collection);\r\n    }\r\n    return collection;\r\n}\r\n","import forEach from './for-each';\r\n\r\nexport default function parseQuery(query: string = ''): { [key: string]: any } {\r\n\r\n    let queryObject: { [key: string]: any } = {};\r\n    let params: string[] = query.split('&');\r\n\r\n    forEach(params, (param: string) => {\r\n        if (param) {\r\n            let pair: string[] = param.split('=');\r\n            let key = decodeURIComponent(pair[0]);\r\n            let value = pair[1] ? decodeURIComponent(pair[1]) : true;\r\n            queryObject[key] = value;\r\n        }\r\n    });\r\n\r\n    return queryObject;\r\n}\r\n","import createMerge from './create-merge';\n\nlet extend = createMerge(0);\nexport default extend;\n","import parseQuery from '../utils/parse-query';\r\nimport extend from '../utils/extend';\r\nimport extendClass from '../utils/extend-class';\r\nimport { IDialog } from './dialog';\r\nimport { Directory } from '../interface';\r\n\r\nexport interface IBaseDialogOptions {\r\n    name?: string;\r\n    redirectUri?: string;\r\n    displayOptions?: Directory<any>;\r\n}\r\n\r\nexport abstract class BaseDialog implements IDialog {\r\n\r\n    static extend: (options: IBaseDialogOptions) => typeof BaseDialog = extendClass;\r\n\r\n    static parseUrl(url: string): Directory<any> {\r\n        let location = document.createElement('a');\r\n        location.href = url;\r\n        if (location.search || location.hash) {\r\n            let query = parseQuery(location.search.substring(1).replace(/\\/$/, ''));\r\n            let hash = parseQuery(location.hash.substring(1).replace(/[\\/$]/, ''));\r\n\r\n            return extend({}, query, hash);\r\n        } else {\r\n            throw new Error(\r\n                'OAuth redirect has occurred but no query or hash parameters were found. ' +\r\n                'They were either not set during the redirect, or were removed—typically by a ' +\r\n                'routing library—before Authllizer could read it.'\r\n            );\r\n        }\r\n    }\r\n\r\n    protected name: string;\r\n    protected redirectUri: string;\r\n    protected displayOptions: Directory<any>;\r\n\r\n    constructor(name: string, redirectUri: string, displayOptions: Directory<any>) {\r\n        this.name = this.name || name;\r\n        this.redirectUri = this.redirectUri || redirectUri;\r\n        this.setDisplayOptions(displayOptions);\r\n    }\r\n\r\n    protected setDisplayOptions(...displayOptions: Directory<any>[]) {\r\n        this.displayOptions = extend(this.displayOptions, ...displayOptions);\r\n    }\r\n\r\n    public abstract open(url: string): Promise<Directory<any>>;\r\n}\r\n","import isString from './is-string';\r\n\r\nexport default function normalizeLocation(location: Location | HTMLAnchorElement | any, { path, data }: { path?: boolean, data?: boolean } = {}) {\r\n    if (isString(location)) {\r\n        let parser = document.createElement('a');\r\n        parser.href = location;\r\n        location = parser;\r\n    }\r\n\r\n    let { protocol, hostname, port, pathname, search, hash } = location;\r\n    let isHttps = protocol === 'https:';\r\n    port = port || (isHttps ? '443' : '80');\r\n    pathname = pathname[0] === '/' ? pathname : `/${pathname}`;\r\n    return [\r\n        `${protocol}//${hostname}:${port}`,\r\n        path ? pathname : '',\r\n        data ? (search + hash) : '',\r\n    ].join('');\r\n}\r\n","export default function isFunction(value: any): boolean {\r\n    return typeof value === 'function';\r\n}\r\n","import isObject from './is-object';\r\n\r\nexport default function isRegExp(value: any) {\r\n    return isObject(value) && value instanceof RegExp;\r\n}\r\n","import extend from '../utils/extend';\r\nimport { IStorage } from './storage';\r\nimport { IToken } from '../tokens/token';\r\n\r\nexport interface IMemoryStorageOptions {\r\n    key?: string;\r\n}\r\n\r\nexport class MemoryStorage implements IStorage {\r\n\r\n    public key: string = 'access_token';\r\n\r\n    private _storage = {};\r\n\r\n    constructor(options: IMemoryStorageOptions = {}) {\r\n        extend(this, options);\r\n    }\r\n\r\n    public getToken(): string {\r\n        let { key } = this;\r\n        return this._storage[key];\r\n    }\r\n\r\n    public setToken(token: IToken): void {\r\n        let { key } = this;\r\n        this._storage[key] = token;\r\n    }\r\n\r\n    public removeToken(): void {\r\n        let { key } = this;\r\n        delete this._storage[key];\r\n    }\r\n}\r\n","import { MemoryStorage } from './memory';\r\nimport { IStorage } from './storage';\r\nimport { IToken } from '../tokens/token';\r\n\r\nexport class LocalStorage extends MemoryStorage implements IStorage {\r\n    public type: string;\r\n\r\n    public getToken(): string {\r\n        try {\r\n            return localStorage.getItem(this.key) as string;\r\n        } catch (e) {\r\n            return super.getToken();\r\n        }\r\n    }\r\n\r\n    public setToken(token: IToken): void {\r\n        try {\r\n            localStorage.setItem(this.key, token.toString());\r\n        } catch (e) {\r\n            super.setToken(token);\r\n        }\r\n    }\r\n\r\n    public removeToken(): void {\r\n        try {\r\n            localStorage.removeItem(this.key);\r\n        } catch (e) {\r\n            super.removeToken();\r\n        }\r\n    }\r\n}\r\n","declare let module: any;\r\ndeclare let require: any;\r\nexport default function decodeBase64(str: string) {\r\n    let buffer: any;\r\n    if (typeof module !== 'undefined' && module.exports) {\r\n        try {\r\n            buffer = require('buffer').Buffer;\r\n        } catch (err) {\r\n            // noop\r\n        }\r\n    }\r\n\r\n    let {fromCharCode} = String;\r\n\r\n    let re_btou = new RegExp([\r\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\r\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\r\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\r\n    ].join('|'), 'g');\r\n\r\n    let cb_btou = (cccc: string) => {\r\n        switch (cccc.length) {\r\n            case 4:\r\n                let cp = ((0x07 & cccc.charCodeAt(0)) << 18)\r\n                    | ((0x3f & cccc.charCodeAt(1)) << 12)\r\n                    | ((0x3f & cccc.charCodeAt(2)) << 6)\r\n                    | (0x3f & cccc.charCodeAt(3));\r\n                let offset = cp - 0x10000;\r\n                return (fromCharCode((offset >>> 10) + 0xD800)\r\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\r\n            case 3:\r\n                return fromCharCode(\r\n                    ((0x0f & cccc.charCodeAt(0)) << 12)\r\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\r\n                    | (0x3f & cccc.charCodeAt(2))\r\n                );\r\n            default:\r\n                return fromCharCode(\r\n                    ((0x1f & cccc.charCodeAt(0)) << 6)\r\n                    | (0x3f & cccc.charCodeAt(1))\r\n                );\r\n        }\r\n    };\r\n\r\n    let btou = (b: string) => {\r\n        return b.replace(re_btou, cb_btou);\r\n    };\r\n\r\n    let _decode = buffer ? (a: any) => {\r\n            return (a.constructor === buffer.constructor\r\n                ? a : new buffer(a, 'base64')).toString();\r\n        }\r\n        : (a: any) => {\r\n            return btou(atob(a));\r\n        };\r\n\r\n    return _decode(\r\n        String(str).replace(/[-_]/g, (m0) => {\r\n            return m0 === '-' ? '+' : '/';\r\n        })\r\n            .replace(/[^A-Za-z0-9\\+\\/]/g, '')\r\n    );\r\n}\r\n","/**\r\n * @resource https://tools.ietf.org/html/rfc7519\r\n */\r\nimport decodeBase64 from '../utils/decode-base64';\r\nimport { IToken } from './token';\r\nimport isString from '../utils/is-string';\r\n\r\nexport interface IJWTPayload {\r\n    iss?: string;\r\n    sub?: string;\r\n    aud?: string;\r\n    exp?: number;\r\n    nbf?: string;\r\n    iat?: number;\r\n    jti?: string;\r\n\r\n    [key: string]: any;\r\n}\r\n\r\nexport class JWT implements IToken {\r\n\r\n    static JWT_RX = /^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+/=]*$/;\r\n\r\n    static parse(token: string): IJWTPayload {\r\n        if (!isString(token) || !this.JWT_RX.test(token)) {\r\n            throw new Error('Token is invalid or missing.');\r\n        }\r\n        let [, base64Url] = token.split('.');\r\n        let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n        return JSON.parse(decodeBase64(base64));\r\n    }\r\n\r\n    public get expire(): Date {\r\n        let { exp } = this._payload;\r\n        return new Date(exp * 1000);\r\n    }\r\n\r\n    private _token: string;\r\n    private _payload: IJWTPayload;\r\n\r\n    protected headerPrefix: string = 'Bearer';\r\n\r\n    constructor(token: string | JWT) {\r\n        this._token = String(token);\r\n        this._payload = JWT.parse(this._token);\r\n    }\r\n\r\n    public getPayload(): IJWTPayload {\r\n        return this._payload;\r\n    }\r\n\r\n    public isExpired(): boolean {\r\n        return new Date() > this.expire;\r\n    }\r\n\r\n    public isValid(): boolean {\r\n        return !this.isExpired();\r\n    }\r\n\r\n    public toHeader(): string {\r\n        return `${this.headerPrefix} ${this._token}`;\r\n    }\r\n\r\n    public toString(): string {\r\n        return this._token;\r\n    }\r\n\r\n    public toJSON(): IJWTPayload {\r\n        return this._payload;\r\n    }\r\n}\r\n","import forEach from './for-each';\r\n\r\nexport default function stringifyQuery(object: { [key: string]: any }, {encode = false, delimiter = ','} = {}): string {\r\n    let parts: string[] = [];\r\n\r\n    forEach(object, (value: string, key: string) => {\r\n        if (encode) {\r\n            key = encodeURIComponent(key);\r\n            value = encodeURIComponent(value);\r\n        }\r\n        parts.push(`${key}=${value}`);\r\n    });\r\n\r\n    return parts.join(delimiter);\r\n}\r\n","import stringifyQuery from './stringify-query';\r\nimport isObject from './is-object';\r\nimport extend from './extend';\r\nimport parseQuery from './parse-query';\r\n\r\nexport default function extendUrlQuery(url: string, params: { [key: string]: any }): string {\r\n    if (!isObject(params) || !Object.keys(params).length) { return url; }\r\n    let [path, query = ''] = url.split('?');\r\n    let queryObject = parseQuery(query);\r\n    extend(queryObject, params);\r\n    query = stringifyQuery(queryObject, {encode: true, delimiter: '&'});\r\n    return `${path}?${query}`;\r\n}\r\n","import { Directory } from '../interface';\r\nimport { IHttpClient, IHttpRequestOptions } from './http';\r\nimport  extendUrlQuery  from '../utils/extend-url-query';\r\n\r\nexport abstract class BaseHttpClient implements IHttpClient {\r\n\r\n\r\n    static extendUrlQuery(url: string, params: Directory<any>) {\r\n        return extendUrlQuery(url, params);\r\n    }\r\n\r\n    protected _client: any;\r\n\r\n    constructor(client?: any) {\r\n        this._client = client;\r\n    }\r\n\r\n    public abstract request<T>(url: string, options: IHttpRequestOptions): Promise<T>;\r\n}\r\n\r\n","import isObject from '../utils/is-object';\r\nimport {BaseHttpClient} from './base';\r\nimport {IHttpRequestOptions} from './http';\r\nimport extend from '../utils/extend';\r\n\r\n// for fetch global scope error 'TypeError: Failed to execute 'fetch' on 'Window': Illegal invocation'\r\n// can be 'fetch.bind(this)' to solve the error.\r\nlet fetchBind = (input, init?) => fetch(input, init);\r\n\r\nexport class FetchHttpClient extends BaseHttpClient {\r\n\r\n    protected _client: typeof fetch;\r\n\r\n    constructor(client: typeof fetch = (typeof fetch !== 'undefined' && fetchBind)) {\r\n        super(client);\r\n    }\r\n\r\n    public request<T>(url: string, options: IHttpRequestOptions): Promise<T> {\r\n\r\n        let {method, data, params, headers = {}, withCredentials} = options;\r\n\r\n        url = FetchHttpClient.extendUrlQuery(url, params);\r\n        let credentials = (withCredentials === true && 'include') || (withCredentials === false && 'same-origin') || 'omit' as any;\r\n\r\n        // Other types of data can be supported\r\n        if (!headers['Content-Type'] && isObject(data)) {\r\n            headers = extend({\r\n                'Content-Type': 'application/json'\r\n            }, headers);\r\n\r\n            data = JSON.stringify(data);\r\n        }\r\n\r\n        let requestOptions: RequestInit = {\r\n            method,\r\n            body: data,\r\n            credentials,\r\n            headers\r\n        };\r\n\r\n        return this._client(url, requestOptions).then((response: Response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                throw response;\r\n            }\r\n        });\r\n    }\r\n}\r\n","import isFunction from './utils/is-function';\r\nimport isString from './utils/is-string';\r\nimport isObject from './utils/is-object';\r\nimport forEach from './utils/for-each';\r\nimport normalizeLocation from './utils/normalize-location';\r\nimport isRegExp from './utils/is-regexp';\r\n\r\nimport { Directory } from './interface';\r\nimport { IStorage } from './storages/storage';\r\nimport { ITokenConstructor } from './tokens/token';\r\nimport { IAdapter, IAdapterConstructor } from './adapters/adapter';\r\nimport { IProvider, IProviderConstructor } from './providers/provider';\r\nimport { IDialogConstructor } from './dialogs/dialog';\r\nimport { LocalStorage } from './storages/local';\r\nimport { JWT } from './tokens/jwt';\r\nimport { BackendAdapter } from './adapters/backend';\r\nimport { BrowserDialog } from './dialogs/browser';\r\nimport { IHttpClient } from './http/http';\r\nimport { FetchHttpClient } from './http/fetch';\r\n\r\nexport interface IConfigOptions {\r\n    adapter?: IAdapterConstructor;\r\n    dialog?: IDialogConstructor;\r\n    httpClient?: IHttpClient;\r\n    interceptList?: (string | RegExp)[];\r\n    providers?: Directory<IProviderConstructor>;\r\n    storage?: IStorage;\r\n    token?: ITokenConstructor;\r\n}\r\n\r\ndeclare let ES6Promise: typeof Promise;\r\n\r\nexport class Config {\r\n\r\n    static Promise: typeof Promise = (typeof Promise !== 'undefined' && Promise) || (typeof ES6Promise !== 'undefined' && ES6Promise) as typeof Promise;\r\n\r\n    protected _options: Directory<any> = {\r\n        adapter: BackendAdapter,\r\n        dialog: BrowserDialog,\r\n        httpClient: new FetchHttpClient(),\r\n        interceptList: [],\r\n        storage: new LocalStorage(),\r\n        token: JWT\r\n    };\r\n\r\n    public get adapter(): IAdapter {\r\n        let { adapter: Adapter } = this._options;\r\n        if (!isFunction(Adapter)) {\r\n            throw new Error(`Config: 'adapter' is missing.`);\r\n        }\r\n        return new Adapter(this.httpClient);\r\n    }\r\n\r\n    public get dialog(): IDialogConstructor {\r\n        let { dialog } = this._options;\r\n        if (!isFunction(dialog)) {\r\n            throw new Error(`Config: 'dialog' is missing.`);\r\n        }\r\n        return dialog;\r\n    }\r\n\r\n    public get httpClient(): IHttpClient {\r\n        let { httpClient } = this._options;\r\n        if (!isObject(httpClient)) {\r\n            throw new Error(`Config: 'httpClient' is missing.`);\r\n        }\r\n        return httpClient;\r\n    }\r\n\r\n    public get interceptList(): (string | RegExp)[] {\r\n        let { interceptList } = this._options;\r\n        return interceptList || [];\r\n    }\r\n\r\n    public get storage(): IStorage {\r\n        let { storage } = this._options;\r\n        if (!isObject(storage)) {\r\n            throw new Error(`Config: 'storage' is missing.`);\r\n        }\r\n        return storage;\r\n    }\r\n\r\n    public get token(): ITokenConstructor {\r\n        let { token } = this._options;\r\n        if (!isFunction(token)) {\r\n            throw new Error(`Config: 'token' is missing.`);\r\n        }\r\n        return token;\r\n    }\r\n\r\n    constructor(options?: IConfigOptions) {\r\n        this.setOptions(options);\r\n    }\r\n\r\n    public setOptions(options: IConfigOptions) {\r\n        if (!isObject(options)) {\r\n            return;\r\n        }\r\n        let { adapter, dialog, httpClient, interceptList, storage, token, providers } = options;\r\n        if (adapter) {\r\n            if (!isFunction(adapter)) {\r\n                throw new Error(`Config: 'adapter' is invalid.`);\r\n            }\r\n            this._options.adapter = adapter;\r\n        }\r\n\r\n\r\n        if (dialog) {\r\n            if (!isFunction(dialog)) {\r\n                throw new Error(`Config: 'dialog' is  invalid.`);\r\n            }\r\n            this._options.dialog = dialog;\r\n        }\r\n\r\n        if (httpClient) {\r\n            if (!isObject(httpClient)) {\r\n                throw new Error(`Config: 'httpClient' is  invalid.`);\r\n            }\r\n            this._options.httpClient = httpClient;\r\n        }\r\n\r\n        if (interceptList) {\r\n            if (!Array.isArray(interceptList)) {\r\n                throw new Error(`Config: 'interceptList' is  invalid.`);\r\n            }\r\n            interceptList.forEach((compere) => {\r\n                if (!isString(compere) && !isRegExp(compere)) {\r\n                    throw new Error(`Config: 'interceptList' invalid compere ${compere}`);\r\n                }\r\n            });\r\n            this._options.interceptList = interceptList;\r\n        }\r\n\r\n        if (storage) {\r\n            if (!isObject(storage)) {\r\n                throw new Error(`Config: 'storage' is invalid.`);\r\n            }\r\n            this._options.storage = storage;\r\n        }\r\n\r\n        if (token) {\r\n            if (!isFunction(token)) {\r\n                throw new Error(`Config: 'token' is invalid.`);\r\n            }\r\n            this._options.token = token;\r\n        }\r\n\r\n        if (providers) {\r\n            if (!isObject(providers)) {\r\n                throw new Error(`Config: 'providers' is invalid.`);\r\n            }\r\n            if (!isObject(this._options.providers)) {\r\n                this._options.providers = {};\r\n            }\r\n            forEach(providers, (provider, name) => {\r\n                if (!isFunction(provider)) {\r\n                    throw new Error(`Config: 'provider' '${name}' is invalid.`);\r\n                }\r\n                this._options.providers[name] = provider;\r\n            });\r\n        }\r\n    }\r\n\r\n    public provider(provider: string): IProvider {\r\n        let { providers } = this._options;\r\n\r\n        if (!isString(provider) || !this.isProviderExists(provider)) {\r\n            throw new Error(`Config: '${provider}' provider is missing.`);\r\n        }\r\n\r\n        let Provider: IProviderConstructor = providers[provider];\r\n\r\n        if (!isFunction(Provider)) {\r\n            throw new Error(`Config: provider should be a class: ${Provider}`);\r\n        }\r\n\r\n        return new Provider(this.adapter, this.dialog);\r\n    }\r\n\r\n    public isProviderExists(provider: string) {\r\n        let { providers = {} } = this._options;\r\n        return !!providers[provider];\r\n    }\r\n\r\n    public isUrlMatchInterceptList(url: string): boolean {\r\n        let { interceptList } = this;\r\n        let { length } = interceptList || [];\r\n        if (!length) {\r\n            return true;\r\n        }\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            let compereUrl = interceptList[i];\r\n            if (isString(compereUrl)) {\r\n                if (normalizeLocation(url) === normalizeLocation(compereUrl as string)) {\r\n                    return true;\r\n                }\r\n            } else if (isRegExp(compereUrl)) {\r\n                if ((compereUrl as RegExp).test(url)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","import { BaseDialog } from './base';\r\nimport stringifyQuery from '../utils/stringify-query';\r\nimport isObject from '../utils/is-object';\r\nimport isFunction from '../utils/is-function';\r\n\r\n\r\nexport abstract class PopupDialog extends BaseDialog {\r\n\r\n    protected _popup: any;\r\n\r\n    protected get stringDisplayOptions(): string {\r\n        return stringifyQuery(this.displayOptions);\r\n    }\r\n\r\n    protected close() {\r\n        if (this._popup && isObject(this._popup) && isFunction(this._popup.close)) {\r\n            this._popup.close();\r\n        }\r\n    }\r\n\r\n    protected focus() {\r\n        if (this._popup && isObject(this._popup) && isFunction(this._popup.focus)) {\r\n            this._popup.focus();\r\n        }\r\n    }\r\n\r\n    protected isClosed() {\r\n        return !this._popup || this._popup.closed || this._popup.closed === void 0;\r\n    }\r\n\r\n}\r\n","import normalizeLocation from '../utils/normalize-location';\r\nimport { Config } from '../config';\r\nimport { PopupDialog } from './popup';\r\nimport { Directory } from '../interface';\r\n\r\nexport interface IBrowserDisplayOptions {\r\n    channelmode?: 'yes' | 'no' | 1 | 0;\r\n    directories?: 'yes' | 'no' | 1 | 0;\r\n    fullscreen?: 'yes' | 'no' | 1 | 0;\r\n    height?: number;\r\n    left?: number;\r\n    location?: 'yes' | 'no' | 1 | 0;\r\n    menubar?: 'yes' | 'no' | 1 | 0;\r\n    resizable?: 'yes' | 'no' | 1 | 0;\r\n    scrollbars?: 'yes' | 'no' | 1 | 0;\r\n    status?: 'yes' | 'no' | 1 | 0;\r\n    titlebar?: 'yes' | 'no' | 1 | 0;\r\n    toolbar?: 'yes' | 'no' | 1 | 0;\r\n    top?: number;\r\n    width?: number;\r\n\r\n    [key: string]: any;\r\n}\r\n\r\nexport interface IBrowserDialogOptions {\r\n    displayOptions?: IBrowserDisplayOptions;\r\n}\r\n\r\nexport class BrowserDialog extends PopupDialog {\r\n\r\n    static extend: (options: IBrowserDialogOptions) => typeof BrowserDialog;\r\n\r\n    protected get dialogName(): string {\r\n        return window.navigator.userAgent.indexOf('CriOS') > -1 ? '_blank' : this.name;\r\n    }\r\n\r\n    protected displayOptions: IBrowserDisplayOptions;\r\n\r\n    protected setDisplayOptions(displayOptions: IBrowserDisplayOptions = {}) {\r\n        displayOptions.height = displayOptions.height || 500;\r\n        displayOptions.width = displayOptions.width || 500;\r\n        super.setDisplayOptions({\r\n            top: window.screenY + ((window.outerHeight - displayOptions.height) / 2.5),\r\n            left: window.screenX + ((window.outerWidth - displayOptions.width) / 2)\r\n        }, displayOptions);\r\n    }\r\n\r\n    public open(url: string): Promise<Directory<any>> {\r\n        this._popup = window.open(url, this.dialogName, this.stringDisplayOptions) as Window;\r\n        this.focus();\r\n        return this.listen().then((url) => {\r\n            return BrowserDialog.parseUrl(url);\r\n        });\r\n    }\r\n\r\n    private listen(): Promise<string> {\r\n        return new Config.Promise((resolve, reject) => {\r\n            let redirectUri = normalizeLocation(this.redirectUri, { path: true });\r\n\r\n            let intervalId = setInterval(() => {\r\n                if (this.isClosed()) {\r\n                    clearInterval(intervalId);\r\n                    return reject(new Error('The dialog was closed'));\r\n                }\r\n\r\n                try {\r\n                    let url: string = normalizeLocation(this._popup.location, { path: true, data: true });\r\n\r\n                    if (url.indexOf(redirectUri) === 0) {\r\n                        this.close();\r\n                        clearInterval(intervalId);\r\n                        resolve(url);\r\n                    }\r\n\r\n                } catch (error) {\r\n                    // Ignore DOMException: Blocked a frame with origin from accessing a cross-origin frame.\r\n                    // A hack to get around same-origin security policy errors in IE.\r\n                }\r\n            }, 500);\r\n        });\r\n    }\r\n}\r\n","import extendClass from '../utils/extend-class';\r\nimport extend from '../utils/extend';\r\nimport forEach from '../utils/for-each';\r\nimport { IProvider } from './provider';\r\nimport { IAdapter, IAdapterResponse, IAdapterRequestOptions } from '../adapters/adapter';\r\nimport { IDialogConstructor } from '../dialogs/dialog';\r\nimport { Directory } from '../interface';\r\n\r\nexport interface IBaseProviderOptions {\r\n    name?: string;\r\n    redirectUri?: string;\r\n    authorizationEndpoint?: string;\r\n    displayOptions?: Directory<any>;\r\n\r\n    [key: string]: any;\r\n}\r\n\r\nexport abstract class BaseProvider implements IProvider {\r\n\r\n    static extend: (options: IBaseProviderOptions) => typeof BaseProvider = extendClass;\r\n\r\n    public name: string;\r\n    protected redirectUri: string = window.location.origin;\r\n    protected authorizationEndpoint: string;\r\n    protected displayOptions: Directory<any>;\r\n\r\n    protected _adapter: IAdapter;\r\n    protected _dialog: IDialogConstructor;\r\n\r\n    constructor(adapter: IAdapter, dialogClass: IDialogConstructor) {\r\n        this._adapter = this._adapter || adapter;\r\n        this._dialog = this._dialog || dialogClass;\r\n    }\r\n\r\n    protected openDialog<T extends Directory<any>>(url: string): Promise<T> {\r\n        let { _dialog: Dialog, name, redirectUri, displayOptions } = this;\r\n        let dialog = new Dialog(name, redirectUri, displayOptions);\r\n        return dialog.open(url).then((response) => {\r\n            this.checkDialogResponse(response);\r\n            return response;\r\n        }) as any;\r\n    }\r\n\r\n    /**\r\n     * this method can be overridden, for handling unique provider dialog errors\r\n     * @param params\r\n     */\r\n    protected checkDialogResponse(params: Directory<any> = {}): void {\r\n        if (params.error) {\r\n            throw new Error(params.error);\r\n        }\r\n    }\r\n\r\n    protected prepareData(requestKeys: Directory<string>, ...args: Directory<any>[]): Directory<any> {\r\n        let params = {};\r\n        let data = extend(...args);\r\n        forEach(requestKeys, (requestKey: string, key: string) => {\r\n            if (!key) {\r\n                return;\r\n            }\r\n            let value = data[key] || this[key];\r\n            if (value) {\r\n                params[requestKey] = value;\r\n            }\r\n        });\r\n        return params;\r\n    }\r\n\r\n    public abstract authenticate<R>(requestOptions: IAdapterRequestOptions): Promise<IAdapterResponse<R>>;\r\n}\r\n","/**\r\n * @resource https://tools.ietf.org/html/rfc5849\r\n */\r\nimport extend from '../utils/extend';\r\nimport stringifyQuery from '../utils/stringify-query';\r\nimport { BaseProvider } from './base';\r\nimport { IAdapterResponse, IAdapterRequestOptions } from '../adapters/adapter';\r\nimport { IProvider } from './provider';\r\nimport { IBaseProviderOptions } from './base';\r\n\r\nexport interface IOAuth1ProviderOptions extends IBaseProviderOptions {\r\n    requestTokenParams?: {\r\n        redirectUri?: string;\r\n        [key: string]: string;\r\n    };\r\n    authenticateParams?: {\r\n        redirectUri?: string;\r\n        oauth_token?: string;\r\n        oauth_verifier?: string;\r\n        [key: string]: string;\r\n    };\r\n}\r\n\r\nexport interface IOAuth1RequestTokenResponse {\r\n    oauth_token: string;\r\n    oauth_token_secret: string;\r\n    oauth_callback_confirmed: string;\r\n}\r\n\r\nexport interface IOAuth1DialogResponse {\r\n    oauth_token: string;\r\n    oauth_verifier: string;\r\n}\r\n\r\nexport class OAuth1Provider extends BaseProvider implements IProvider {\r\n\r\n    static extend: (options: IOAuth1ProviderOptions) => typeof OAuth1Provider;\r\n\r\n    protected requestTokenParams: {\r\n        redirectUri: string;\r\n        [key: string]: string;\r\n    } = {\r\n        redirectUri: 'callback'\r\n    };\r\n\r\n    protected authenticateParams: {\r\n        redirectUri: string;\r\n        oauth_token: string;\r\n        oauth_verifier: string;\r\n        [key: string]: string;\r\n    } = {\r\n        redirectUri: 'callback',\r\n        oauth_token: 'oauth_token',\r\n        oauth_verifier: 'oauth_verifier'\r\n    };\r\n\r\n    public authenticate<R>(requestOptions?: IAdapterRequestOptions): Promise<IAdapterResponse<R>> {\r\n        return this.getRequestToken(requestOptions).then((requestTokenResponse: IOAuth1RequestTokenResponse) => {\r\n            return this.getPermissions(requestTokenResponse).then((dialogResponse: IOAuth1DialogResponse) => {\r\n                return this.getAccessToken<R>(dialogResponse, requestOptions);\r\n            });\r\n        });\r\n    }\r\n\r\n    protected getRequestToken({ provider, type, token }: IAdapterRequestOptions): Promise<IOAuth1RequestTokenResponse> {\r\n        let { requestTokenParams } = this;\r\n        let data = this.prepareData(requestTokenParams);\r\n        let options: IAdapterRequestOptions = {\r\n            type,\r\n            data,\r\n            provider,\r\n            token\r\n        };\r\n        return this._adapter.request<IOAuth1RequestTokenResponse>(options).then(({ response }: IAdapterResponse<IOAuth1RequestTokenResponse>) => response);\r\n    }\r\n\r\n    protected getPermissions(requestTokenResponse: IOAuth1RequestTokenResponse): Promise<IOAuth1DialogResponse> {\r\n        let query = stringifyQuery(requestTokenResponse, { delimiter: '&' });\r\n        let url = [this.authorizationEndpoint, query].join('?');\r\n        return this.openDialog<IOAuth1DialogResponse>(url);\r\n    }\r\n\r\n    protected getAccessToken<R>(oauthData: IOAuth1DialogResponse, requestOptions: IAdapterRequestOptions): Promise<IAdapterResponse<R>> {\r\n        let { authenticateParams } = this;\r\n        let data = this.prepareData(authenticateParams, oauthData);\r\n        requestOptions.data = extend(data, requestOptions.data);\r\n        return this._adapter.request<R>(requestOptions);\r\n    }\r\n\r\n}\r\n","\r\nexport default function randomString() {\r\n    return Math.random().toString(36).substr(2);\r\n}\r\n","export default function camelCase(name: string): string {\r\n    return name.replace(/([\\:\\-\\_\\.]+(.))/g, (_, separator, letter, offset) => {\r\n        return offset ? letter.toUpperCase() : letter;\r\n    });\r\n}\r\n","/**\r\n * @resource https://tools.ietf.org/html/rfc6749\r\n */\r\nimport extend from '../utils/extend';\r\nimport forEach from '../utils/for-each';\r\nimport randomString from '../utils/random-string';\r\nimport camelCase from '../utils/camel-case';\r\nimport { Config } from '../config';\r\nimport { BaseProvider, IBaseProviderOptions } from './base';\r\nimport { IAdapterResponse, IAdapterRequestOptions } from '../adapters/adapter';\r\nimport { IProvider } from './provider';\r\n\r\nexport interface IOAuth2CodeDialogResponse {\r\n    code: string;\r\n    state: string;\r\n}\r\n\r\nexport interface IOAuth2TokenDialogResponse {\r\n    access_token: string;\r\n    token_type: string;\r\n    expires_in: number;\r\n    state: string;\r\n}\r\n\r\n\r\nexport interface IOAuth2ProviderOptions extends IBaseProviderOptions {\r\n    clientId?: string;\r\n    responseType?: 'code' | 'token';\r\n    scopeDelimiter?: string;\r\n    scopeParams?: string[];\r\n    scopePrefix?: string;\r\n    /**\r\n     * the default is random string\r\n     */\r\n    state?: string;\r\n    baseDialogParams?: string[];\r\n    dialogParams?: string[];\r\n    authenticateParams?: {\r\n        code: string,\r\n        clientId: string,\r\n        redirectUri: string,\r\n        [key: string]: string\r\n    };\r\n}\r\n\r\nexport class OAuth2Provider extends BaseProvider implements IProvider {\r\n\r\n    static extend: (options: IOAuth2ProviderOptions) => typeof OAuth2Provider;\r\n\r\n    protected get scope(): string {\r\n        let { scopeParams = [], scopePrefix, scopeDelimiter } = this;\r\n        let stringScope: string = scopeParams.join(scopeDelimiter);\r\n        if (stringScope === '') { return void 0 as any; }\r\n        return scopePrefix ? [scopePrefix, stringScope].join(scopeDelimiter) : stringScope;\r\n    }\r\n\r\n    protected clientId: string;\r\n    protected responseType: 'code' | 'token' = 'code';\r\n    protected scopeDelimiter: string;\r\n    protected scopeParams: string[];\r\n    protected scopePrefix: string;\r\n\r\n    protected state: string;\r\n    protected baseDialogParams: string[] = ['client_id', 'scope', 'state', 'redirect_uri', 'response_type'];\r\n    protected dialogParams: string[];\r\n    protected authenticateParams: {\r\n        code: string,\r\n        clientId: string,\r\n        redirectUri: string,\r\n        [key: string]: string\r\n    } = {\r\n        code: 'code',\r\n        clientId: 'client_id',\r\n        redirectUri: 'redirect_uri'\r\n    };\r\n\r\n    public authenticate<R>(requestOptions: IAdapterRequestOptions): Promise<IAdapterResponse<R>> {\r\n        this.state = this.state || randomString();\r\n\r\n        return this.getPermissions().then((dialogResponse: IOAuth2CodeDialogResponse | IOAuth2TokenDialogResponse) => {\r\n            return this.getAccessToken<R>(dialogResponse, requestOptions);\r\n        });\r\n    }\r\n\r\n    protected getPermissions(): Promise<IOAuth2CodeDialogResponse | IOAuth2TokenDialogResponse> {\r\n        let { baseDialogParams, dialogParams } = this;\r\n        let keys = [].concat(baseDialogParams || [], dialogParams || []);\r\n        let params: string[] = [];\r\n\r\n        forEach(keys, (key: string) => {\r\n            let camelKey = camelCase(key) as keyof this;\r\n            let value: this[keyof this] = this[camelKey];\r\n            if (value != void 0) { params.push(`${key}=${value}`); }\r\n        });\r\n\r\n        let query = params.join('&');\r\n        let url = [this.authorizationEndpoint, query].join('?');\r\n\r\n        return this.openDialog<IOAuth2CodeDialogResponse | IOAuth2TokenDialogResponse>(url);\r\n    }\r\n\r\n    public getAccessToken<R>(oauthData: IOAuth2CodeDialogResponse | IOAuth2TokenDialogResponse, requestOptions: IAdapterRequestOptions): Promise<IAdapterResponse<R>> {\r\n        if (this.state && oauthData.state !== this.state) {\r\n            return Config.Promise.reject(new Error('The value returned in the state parameter does not match the state value from your original authorization code request.'));\r\n        }\r\n\r\n        if (this.responseType === 'token') {\r\n            let token = (oauthData as IOAuth2TokenDialogResponse).access_token;\r\n            return Config.Promise.resolve({ token, response: oauthData } as any);\r\n        }\r\n\r\n        let { authenticateParams } = this;\r\n        let data = this.prepareData(authenticateParams, oauthData);\r\n        requestOptions.data = extend(data, requestOptions.data);\r\n        return this._adapter.request<R>(requestOptions);\r\n    }\r\n}\r\n","import { MemoryStorage, IMemoryStorageOptions } from './memory';\r\nimport { IStorage } from './storage';\r\nimport { IToken } from '../tokens/token';\r\nimport isFunction from '../utils/is-function';\r\n\r\nexport interface ICookieStorageOptions extends IMemoryStorageOptions {\r\n    expire: () => (Date | number) | Date | number;\r\n    path: string;\r\n}\r\n\r\nexport class CookieStorage extends MemoryStorage implements IStorage {\r\n\r\n    public expire: () => (Date | number) | Date | number;\r\n    public path: string;\r\n\r\n    constructor(options?: ICookieStorageOptions) {\r\n        super(options);\r\n    }\r\n\r\n    public getToken(): string {\r\n        let result;\r\n        try {\r\n            let items: string[] = document.cookie.split(';');\r\n            let { length } = items;\r\n            for (let i = 0; i < length; i++) {\r\n                let [key, value] = items[i].split('=');\r\n                if (key.trim() === this.key) {\r\n                    result = value;\r\n                    break;\r\n                }\r\n            }\r\n        } catch (e) {\r\n            result = super.getToken();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public setToken(token: IToken): void {\r\n        let expire = token.expire || (isFunction(this.expire) ? this.expire() : this.expire);\r\n        this._setToken(token, expire as any);\r\n    }\r\n\r\n    public removeToken(): void {\r\n        this._setToken('', 0);\r\n    }\r\n\r\n    private _setToken(token: IToken | string, expire?: Date | number): void {\r\n        try {\r\n            document.cookie = [\r\n                `${this.key}=${token}`,\r\n                expire ? `expires=${new Date(expire as any).toUTCString()}` : '',\r\n                this.path ? `path=${this.path}` : ''\r\n            ].join(';');\r\n        } catch (e) {\r\n            super.setToken(token as IToken);\r\n        }\r\n    }\r\n}\r\n","import { MemoryStorage } from './memory';\r\nimport { IStorage } from './storage';\r\nimport { IToken } from '../tokens/token';\r\n\r\nexport class SessionStorage extends MemoryStorage implements IStorage {\r\n\r\n    public getToken(): string {\r\n        try {\r\n            return sessionStorage.getItem(this.key) as string;\r\n        } catch (e) {\r\n            return super.getToken();\r\n        }\r\n    }\r\n\r\n    public setToken(token: IToken): void {\r\n        try {\r\n            sessionStorage.setItem(this.key, token.toString());\r\n        } catch (e) {\r\n            super.setToken(token);\r\n        }\r\n    }\r\n\r\n    public removeToken(): void {\r\n        try {\r\n            sessionStorage.removeItem(this.key);\r\n        } catch (e) {\r\n            super.removeToken();\r\n        }\r\n    }\r\n}\r\n","import forEach from './for-each';\r\nimport isFunction from './is-function';\r\n\r\nexport interface Listener<T> {\r\n    (value?: T): void;\r\n}\r\n\r\nexport default class EventEmitter<T> {\r\n\r\n    protected _listeners: Listener<T>[] = [];\r\n\r\n    constructor(...listeners: Listener<T>[]) {\r\n        this.on(...listeners);\r\n    }\r\n\r\n    public emit(value?: T): this {\r\n        forEach(this._listeners, (listener) => {\r\n            listener(value);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    public on(...listeners: Listener<T>[]): this {\r\n        forEach(listeners, (listener) => {\r\n            if (isFunction(listener)) {\r\n                this._listeners.push(listener);\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n\r\n    public remove(...listeners: Listener<T>[]): this {\r\n        forEach(listeners, (listener) => {\r\n            let index = this._listeners.indexOf(listener);\r\n            if (index > -1) {\r\n                this._listeners.splice(index, 1);\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n}\r\n","import extend from './utils/extend';\r\nimport isString from './utils/is-string';\r\nimport {AdapterRequestType, IAdapterResponse, IAdapterRequestOptions} from './adapters/adapter';\r\nimport {Config, IConfigOptions} from './config';\r\nimport {IToken, ITokenConstructor} from './tokens/token';\r\nimport {Directory} from './interface';\r\nimport EventEmitter from './utils/event-emitter';\r\n\r\nexport interface IAuthllizerOptions extends IConfigOptions {\r\n    /**\r\n     * if to use the Authllizer class instance or create new instance [default: true]\r\n     */\r\n    useClassInstance?: boolean;\r\n}\r\n\r\nexport class Authllizer {\r\n\r\n    static __instance: Authllizer;\r\n\r\n    static get instance(): Authllizer {\r\n        if (!this.__instance) {\r\n            this.__instance = new Authllizer({useClassInstance: false});\r\n        }\r\n        return this.__instance;\r\n    }\r\n\r\n    private _config: Config = new Config;\r\n\r\n    public onChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n    constructor(options: IAuthllizerOptions = {}) {\r\n\r\n        if (options.useClassInstance !== false) {\r\n            return Authllizer.instance.config(options);\r\n        }\r\n\r\n        this.config(options);\r\n    }\r\n\r\n    public config(options: IConfigOptions) {\r\n        this._config.setOptions(options);\r\n        return this;\r\n    }\r\n\r\n    public signIn<T>(data?: Directory<any>): Promise<T> {\r\n        let options: IAdapterRequestOptions = {\r\n            type: AdapterRequestType.signIn,\r\n            data,\r\n            extractToken: true\r\n        };\r\n\r\n        return this._config.adapter.request<T>(options).then(({response, token}: IAdapterResponse<T>) => {\r\n            this.setToken(token);\r\n            return response;\r\n        });\r\n    }\r\n\r\n    public signUp<T>(data?: Directory<any>, signIn?: boolean): Promise<T> {\r\n        let options: IAdapterRequestOptions = {\r\n            type: AdapterRequestType.signUp,\r\n            data,\r\n            extractToken: signIn\r\n        };\r\n\r\n        return this._config.adapter.request<T>(options).then(({response, token}: IAdapterResponse<T>) => {\r\n            if (signIn) {\r\n                this.setToken(token);\r\n            }\r\n            return response;\r\n        });\r\n    }\r\n\r\n    public signOut<T>(data?: Directory<any>): Promise<T> {\r\n        let options: IAdapterRequestOptions = {\r\n            type: AdapterRequestType.signOut,\r\n            data,\r\n            token: this.getToken()\r\n        };\r\n\r\n        return this._config.adapter.request<T>(options).then(({response}: IAdapterResponse<T>) => {\r\n            this.removeToken();\r\n            return response;\r\n        });\r\n    }\r\n\r\n    public authenticate<T>(provider: string, data?: Directory<any>): Promise<T> {\r\n        let options: IAdapterRequestOptions = {\r\n            type: AdapterRequestType.authenticate,\r\n            data,\r\n            extractToken: true,\r\n            provider\r\n        };\r\n\r\n        return this._config.provider(provider).authenticate<T>(options).then(({response, token}: IAdapterResponse<T>) => {\r\n            this.setToken(token);\r\n            return response;\r\n        });\r\n    }\r\n\r\n    public link<T>(provider: string, data?: Directory<any>): Promise<T> {\r\n        let options: IAdapterRequestOptions = {\r\n            type: AdapterRequestType.link,\r\n            data,\r\n            token: this.getToken(),\r\n            provider\r\n        };\r\n\r\n        return this._config.provider(provider).authenticate<T>(options).then(({response}: IAdapterResponse<T>) => response);\r\n    }\r\n\r\n    public unlink<T>(provider: string, data?: Directory<any>): Promise<T> {\r\n        let options: IAdapterRequestOptions = {\r\n            type: AdapterRequestType.unlink,\r\n            data: extend({provider}, data),\r\n            token: this.getToken()\r\n        };\r\n\r\n        return this._config.adapter.request<T>(options).then(({response}: IAdapterResponse<T>) => response);\r\n    }\r\n\r\n    public refresh<T>(data?: Directory<any>): Promise<T> {\r\n        let options: IAdapterRequestOptions = {\r\n            type: AdapterRequestType.refresh,\r\n            data,\r\n            token: this.getToken(),\r\n            extractToken: true\r\n        };\r\n\r\n        return this._config.adapter.request<T>(options).then(({token, response}: IAdapterResponse<T>) => {\r\n            this.setToken(token);\r\n            return response;\r\n        });\r\n    }\r\n\r\n    public isAuthenticated(): boolean {\r\n        let token: IToken = this.getToken();\r\n        return token ? token.isValid() : false;\r\n    }\r\n\r\n    public getToken<T extends IToken>(): T {\r\n        let token: string = this._config.storage.getToken();\r\n        let Token: ITokenConstructor = this._config.token;\r\n        let tokenObject;\r\n        try {\r\n            tokenObject = new Token(token);\r\n        } catch (e) {\r\n        }\r\n\r\n        return tokenObject;\r\n    }\r\n\r\n    public setToken(token: string | IToken): void {\r\n\r\n        if (isString(token)) {\r\n            let Token: ITokenConstructor = this._config.token;\r\n            token = new Token(token);\r\n        }\r\n\r\n        this._config.storage.setToken(token as IToken);\r\n        this.onChange.emit(true);\r\n    }\r\n\r\n    public removeToken(): void {\r\n        this._config.storage.removeToken();\r\n        this.onChange.emit(false);\r\n    }\r\n\r\n    /**\r\n     * for easily create intercepts, checking if necessary to intercept\r\n     * this method checks to see if there is an authenticated user and if there is a match in config.interceptList\r\n     * @param {string} url - url to check\r\n     * @returns {boolean} - if need to intercept\r\n     */\r\n    public toIntercept(url: string): boolean {\r\n        return this.isAuthenticated() && this._config.isUrlMatchInterceptList(url);\r\n    }\r\n}\r\n","\r\nexport * from './adapters';\r\nexport * from './dialogs';\r\nexport * from './http';\r\nexport * from './providers';\r\nexport * from './storages';\r\nexport * from './tokens';\r\nexport {default as EventEmitter, Listener} from './utils/event-emitter';\r\nexport * from './authllizer';\r\nexport * from './config';\r\nexport * from './interface';\r\n\r\nimport { Authllizer } from './authllizer';\r\nexport default Authllizer.instance;\r\n"],"names":["AdapterRequestType","tslib_1.__extends"],"mappings":";;;;;;;;;;;;AAYA,WAAY,kBAAkB;IAC1B,uCAAiB,CAAA;IACjB,uCAAiB,CAAA;IACjB,yCAAmB,CAAA;IACnB,mDAA6B,CAAA;IAC7B,mCAAa,CAAA;IACb,uCAAiB,CAAA;IACjB,yCAAmB,CAAA;CACtB,EARWA,0BAAkB,KAAlBA,0BAAkB,QAQ7B;;kBCpBgC,KAAU;IACvC,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAC;CACpC;;qBCAmC,KAAwB;IAAxB,sBAAA,EAAA,gBAAwB;IACxD,OAAO,UAAC,MAAmC;QAAnC,uBAAA,EAAA,WAAmC;QAAE,iBAAoC;aAApC,UAAoC,EAApC,qBAAoC,EAApC,IAAoC;YAApC,gCAAoC;;QACxE,IAAA,8BAAqB,CAAY;QACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE;YACpC,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;YAC9B,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC1B,IAAA,wBAAkB,CAAS;YAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;gBACjC,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBAClB,IAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;gBACxB,IAAI,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;oBAC3G,KAAK,GAAG,WAAW,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;iBACxD;gBACD,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;aACvB;SACJ;QACD,OAAO,MAAM,CAAC;KACjB,CAAC;CACL;;AClBD,IAAI,KAAK,GAAG,WAAW,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBCAsB,OAAY;IACvD;QAAqBC,2BAA2B;QAC5C;YAAY,cAAc;iBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;gBAAd,yBAAc;;YAA1B,+BACa,IAAI,UAEhB;YADG,KAAK,CAAC,KAAI,EAAE,OAAO,CAAC,CAAC;;SACxB;QACL,cAAC;KAAA,CALqB,IAA0B,GAK9C;CACL;;kBCTgC,KAAU;IACvC,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAC;CACpC;;mBCFiC,KAAU;IACxC,OAAO,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,CAAC;CAChD;;aCE8B,MAA8B,EAAE,IAAa,EAAE,YAAgB;IAC1F,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,EAAE,EAAE;QAAE,OAAO,MAAM,CAAC;KAAE;IACvD,IAAI,IAAI,GAAG,CAAA,KAAG,IAAM,EAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC3B,IAAA,oBAAM,CAAS;IACpB,IAAI,MAAM,GAAG,MAAM,CAAC;IACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAClB,IAAI;YACA,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;SACxB;QAAC,OAAO,CAAC,EAAE;YACR,OAAO,YAAY,CAAC;SACvB;KACJ;IACD,QAAQ,MAAM,KAAK,KAAK,CAAC,GAAG,MAAM,GAAI,YAAY,EAAa;CAClE;;iBClB+B,OAAe,EAAE,GAAW;IACxD,IAAI,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;QAChC,OAAO,GAAG,CAAC;KACd;IACD,IAAI,MAAM,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACtC,IAAI,SAAS,GAAG,UAAC,GAAW;QACxB,OAAO,GAAG;aACL,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC;aACtB,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC;aACrB,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC;aACrB,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;KAChC,CAAC;IACF,OAAO,SAAS,CAAC,MAAM,CAAC,CAAC;CAC5B;;AC+BD;IA4BI,wBAAY,UAAuB;QAxBzB,YAAO,GAAW,OAAO,CAAC;QAE1B,WAAM,GAAkC,SAAS,CAAC;QAClD,YAAO,GAAkC,UAAU,CAAC;QACpD,WAAM,GAAkC,SAAS,CAAC;QAClD,iBAAY,GAAkC,EAAE,CAAC;QACjD,SAAI,GAAkC,EAAE,CAAC;QACzC,WAAM,GAAkC,SAAS,CAAC;QAClD,YAAO,GAAkC,UAAU,CAAC;QAEpD,uBAAkB,GAAwB;YAChD,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,EAAE;YACV,OAAO,EAAE,EAAE;YACX,eAAe,EAAE,KAAK;SACzB,CAAC;QAEQ,kBAAa,GAAY,IAAI,CAAC;QAE9B,cAAS,GAAW,cAAc,CAAC;QAKzC,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;KACjC;IAEM,gCAAO,GAAd,UAAkB,cAAsC;QAAxD,iBAaC;QAZQ,IAAA,0CAAY,CAAmB;QACpC,IAAI,YAAY,GAAyB,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;QACrF,IAAI,GAAG,GAAW,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;QAChE,IAAI,WAAW,GAAwB,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;QAEzF,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAI,GAAG,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,UAAC,QAAW;YAClE,IAAI,eAAe,GAAwB,EAAC,QAAQ,UAAA,EAAC,CAAC;YACtD,IAAI,YAAY,EAAE;gBACd,eAAe,CAAC,KAAK,GAAG,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;aACvD;YACD,OAAO,eAAe,CAAC;SAC1B,CAAC,CAAC;KACN;IAES,mCAAU,GAApB,UAAqB,EAAkC,EAAE,EAA2B;YAA9D,sBAAQ;YAA4B,YAAG;QACzD,IAAI,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;YAChC,GAAG,GAAG,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;SAChC;QAED,OAAO,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;KAC1D;IAES,uCAAc,GAAxB,UAAyB,EAA+C,EAAE,EAAqD;YAArG,gBAAK,EAAE,sBAAQ,EAAE,cAAI;YAA4B,iCAA6B;QAChG,IAAA,SAA0C,EAAzC,0CAAkB,EAAE,gCAAa,CAAS;QAE/C,IAAI,OAAO,GAAG;YACV,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,EAAE;YACV,OAAO,EAAE,EAAE;SACd,CAAC;QAEF,IAAI,QAAQ,IAAI,CAAC,aAAa,EAAE;YAC5B,IAAI,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;SAC/B;QAED,IAAI,KAAK,EAAE;YACP,OAAO,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;SACvD;QAED,IAAI,aAAa,GAAwB,KAAK,CAAC;YAC3C,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,EAAE;YACV,OAAO,EAAE,EAAE;SACd,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,OAAO,CAAC,CAAC;QAElD,aAAa,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,aAAa,CAAC,MAAM,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC;QAEpG,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;KAChD;IAES,+CAAsB,GAAhC,UAAiC,EAA8B;YAA7B,cAAI;QAClC,IAAI,OAAO,GAAyB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAC,GAAG,EAAG,IAAI,CAAC,IAAI,CAAY,EAAC,GAAI,IAAI,CAAC,IAAI,CAA0B,IAAI,EAAE,CAAC;QACtI,OAAO,CAAC,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,GAAG,MAAI,IAAM,CAAC;QAE/D,OAAO,OAAO,CAAC;KAClB;IAES,oCAAW,GAArB,UAAsB,WAAgC,EAAE,IAAqB;QACpE,IAAA,2BAAM,CAAgB;QAE3B,IAAK,WAIJ;QAJD,WAAK,WAAW;YACZ,6CAAI,CAAA;YACJ,2CAAG,CAAA;YACH,+CAAK,CAAA;SACR,EAJI,WAAW,KAAX,WAAW,QAIf;QAED,IAAI,MAAM,IAAI,WAAW,EAAE;YACvB,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;YAE9B,IAAI,WAAW,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE;gBAC3D,OAAO,WAAW,CAAC,IAAI,CAAC;aAC3B;SACJ;aAAM;YACH,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAClD,OAAO,WAAW,CAAC,IAAI,CAAC;SAC3B;QAED,OAAO,WAAW,CAAC;KACtB;IAES,qCAAY,GAAtB,UAAuB,QAAa;QAC3B,IAAA,0BAAS,CAAS;QACvB,OAAO,GAAG,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;KACnC;IAlHM,qBAAM,GAA+D,WAAW,CAAC;IAoH5F,qBAAC;CAAA;;iBClK+B,UAAoB,EAAE,QAA6B;IAAnD,2BAAA,EAAA,eAAoB;IAAE,yBAAA,EAAA,qBAAiB,CAAM,IAAK,OAAA,CAAC,GAAA;IAC/E,IAAI,UAAU,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAClE,IAAA,sDAAM,CAAyC;IACpD,IAAI,CAAC,MAAM,EAAE;QACT,OAAO,UAAU,CAAC;KACrB;IACD,IAAI,KAAK,GAAW,CAAC,CAAC;IACtB,OAAO,KAAK,GAAG,MAAM,EAAE;QACnB,IAAI,GAAG,GAAG,UAAU,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC;QACrD,IAAI,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;QAC5B,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC;KACpC;IACD,OAAO,UAAU,CAAC;CACrB;;oBCXkC,KAAkB;IAAlB,sBAAA,EAAA,UAAkB;IAEjD,IAAI,WAAW,GAA2B,EAAE,CAAC;IAC7C,IAAI,MAAM,GAAa,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAExC,OAAO,CAAC,MAAM,EAAE,UAAC,KAAa;QAC1B,IAAI,KAAK,EAAE;YACP,IAAI,IAAI,GAAa,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACtC,IAAI,GAAG,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YACzD,WAAW,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;SAC5B;KACJ,CAAC,CAAC;IAEH,OAAO,WAAW,CAAC;CACtB;;ACfD,IAAI,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC;;ACU3B;IAyBI,oBAAY,IAAY,EAAE,WAAmB,EAAE,cAA8B;QACzE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,WAAW,CAAC;QACnD,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;KAC1C;IAzBM,mBAAQ,GAAf,UAAgB,GAAW;QACvB,IAAI,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC3C,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;QACpB,IAAI,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,IAAI,EAAE;YAClC,IAAI,KAAK,GAAG,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;YACxE,IAAI,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;YAEvE,OAAO,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;SAClC;aAAM;YACH,MAAM,IAAI,KAAK,CACX,0EAA0E;gBAC1E,+EAA+E;gBAC/E,kDAAkD,CACrD,CAAC;SACL;KACJ;IAYS,sCAAiB,GAA3B;QAA4B,wBAAmC;aAAnC,UAAmC,EAAnC,qBAAmC,EAAnC,IAAmC;YAAnC,mCAAmC;;QAC3D,IAAI,CAAC,cAAc,GAAG,MAAM,gBAAC,IAAI,CAAC,cAAc,SAAK,cAAc,EAAC,CAAC;KACxE;IA/BM,iBAAM,GAAuD,WAAW,CAAC;IAkCpF,iBAAC;CAAA;;2BC9CyC,QAA4C,EAAE,EAAuD;QAAvD,4BAAuD,EAArD,cAAI,EAAE,cAAI;IAChG,IAAI,QAAQ,CAAC,QAAQ,CAAC,EAAE;QACpB,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACzC,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC;QACvB,QAAQ,GAAG,MAAM,CAAC;KACrB;IAEK,IAAA,4BAAQ,EAAE,4BAAQ,EAAE,oBAAI,EAAE,4BAAQ,EAAE,wBAAM,EAAE,oBAAI,CAAc;IACpE,IAAI,OAAO,GAAG,QAAQ,KAAK,QAAQ,CAAC;IACpC,IAAI,GAAG,IAAI,KAAK,OAAO,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC;IACxC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,QAAQ,GAAG,MAAI,QAAU,CAAC;IAC3D,OAAO;QACA,QAAQ,UAAK,QAAQ,SAAI,IAAM;QAClC,IAAI,GAAG,QAAQ,GAAG,EAAE;QACpB,IAAI,IAAI,MAAM,GAAG,IAAI,IAAI,EAAE;KAC9B,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;CACd;;oBClBkC,KAAU;IACzC,OAAO,OAAO,KAAK,KAAK,UAAU,CAAC;CACtC;;kBCAgC,KAAU;IACvC,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,YAAY,MAAM,CAAC;CACrD;;ACID;IAMI,uBAAY,OAAmC;QAAnC,wBAAA,EAAA,YAAmC;QAJxC,QAAG,GAAW,cAAc,CAAC;QAE5B,aAAQ,GAAG,EAAE,CAAC;QAGlB,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;KACzB;IAEM,gCAAQ,GAAf;QACU,IAAA,cAAG,CAAU;QACnB,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KAC7B;IAEM,gCAAQ,GAAf,UAAgB,KAAa;QACnB,IAAA,cAAG,CAAU;QACnB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;KAC9B;IAEM,mCAAW,GAAlB;QACU,IAAA,cAAG,CAAU;QACnB,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KAC7B;IACL,oBAAC;CAAA;;AC5BD;IAAkCA,gCAAa;IAA/C;;KA0BC;IAvBU,+BAAQ,GAAf;QACI,IAAI;YACA,OAAO,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAW,CAAC;SACnD;QAAC,OAAO,CAAC,EAAE;YACR,OAAO,iBAAM,QAAQ,WAAE,CAAC;SAC3B;KACJ;IAEM,+BAAQ,GAAf,UAAgB,KAAa;QACzB,IAAI;YACA,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;SACpD;QAAC,OAAO,CAAC,EAAE;YACR,iBAAM,QAAQ,YAAC,KAAK,CAAC,CAAC;SACzB;KACJ;IAEM,kCAAW,GAAlB;QACI,IAAI;YACA,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACrC;QAAC,OAAO,CAAC,EAAE;YACR,iBAAM,WAAW,WAAE,CAAC;SACvB;KACJ;IACL,mBAAC;CAAA,CA1BiC,aAAa;;sBCFV,GAAW;IAC5C,IAAI,MAAW,CAAC;IAChB,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,OAAO,EAAE;QACjD,IAAI;YACA,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;SACrC;QAAC,OAAO,GAAG,EAAE;;SAEb;KACJ;IAEI,IAAA,kCAAY,CAAW;IAE5B,IAAI,OAAO,GAAG,IAAI,MAAM,CAAC;QACrB,wBAAwB;QACxB,2BAA2B;QAC3B,2BAA2B;KAC9B,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;IAElB,IAAI,OAAO,GAAG,UAAC,IAAY;QACvB,QAAQ,IAAI,CAAC,MAAM;YACf,KAAK,CAAC;gBACF,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE;uBACpC,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;uBAClC,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;uBACjC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,IAAI,MAAM,GAAG,EAAE,GAAG,OAAO,CAAC;gBAC1B,QAAQ,YAAY,CAAC,CAAC,MAAM,KAAK,EAAE,IAAI,MAAM,CAAC;sBACxC,YAAY,CAAC,CAAC,MAAM,GAAG,KAAK,IAAI,MAAM,CAAC,EAAE;YACnD,KAAK,CAAC;gBACF,OAAO,YAAY,CACf,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE;uBAC/B,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;uBACjC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAChC,CAAC;YACN;gBACI,OAAO,YAAY,CACf,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC;uBAC9B,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAChC,CAAC;SACT;KACJ,CAAC;IAEF,IAAI,IAAI,GAAG,UAAC,CAAS;QACjB,OAAO,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;KACtC,CAAC;IAEF,IAAI,OAAO,GAAG,MAAM,GAAG,UAAC,CAAM;QACtB,OAAO,CAAC,CAAC,CAAC,WAAW,KAAK,MAAM,CAAC,WAAW;cACtC,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,QAAQ,EAAE,CAAC;KACjD;UACC,UAAC,CAAM;YACL,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACxB,CAAC;IAEN,OAAO,OAAO,CACV,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,UAAC,EAAE;QAC5B,OAAO,EAAE,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;KACjC,CAAC;SACG,OAAO,CAAC,mBAAmB,EAAE,EAAE,CAAC,CACxC,CAAC;CACL;;AC9DD;;;AAGA,AAgBA;IAuBI,aAAY,KAAmB;QAFrB,iBAAY,GAAW,QAAQ,CAAC;QAGtC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC1C;IAtBM,SAAK,GAAZ,UAAa,KAAa;QACtB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAC9C,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;SACnD;QACG,IAAA,qBAAgC,EAA7B,iBAAS,CAAqB;QACrC,IAAI,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC7D,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;KAC3C;IAED,sBAAW,uBAAM;aAAjB;YACU,IAAA,uBAAG,CAAmB;YAC5B,OAAO,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;SAC/B;;;OAAA;IAYM,wBAAU,GAAjB;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;IAEM,uBAAS,GAAhB;QACI,OAAO,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;KACnC;IAEM,qBAAO,GAAd;QACI,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;KAC5B;IAEM,sBAAQ,GAAf;QACI,OAAU,IAAI,CAAC,YAAY,SAAI,IAAI,CAAC,MAAQ,CAAC;KAChD;IAEM,sBAAQ,GAAf;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB;IAEM,oBAAM,GAAb;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;IAhDM,UAAM,GAAG,yDAAyD,CAAC;IAiD9E,UAAC;CAAA;;wBCpEsC,MAA8B,EAAE,EAAsC;QAAtC,4BAAsC,EAArC,cAAc,EAAd,mCAAc,EAAE,iBAAe,EAAf,oCAAe;IACnG,IAAI,KAAK,GAAa,EAAE,CAAC;IAEzB,OAAO,CAAC,MAAM,EAAE,UAAC,KAAa,EAAE,GAAW;QACvC,IAAI,MAAM,EAAE;YACR,GAAG,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;YAC9B,KAAK,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC;SACrC;QACD,KAAK,CAAC,IAAI,CAAI,GAAG,SAAI,KAAO,CAAC,CAAC;KACjC,CAAC,CAAC;IAEH,OAAO,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;CAChC;;wBCTsC,GAAW,EAAE,MAA8B;IAC9E,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE;QAAE,OAAO,GAAG,CAAC;KAAE;IACjE,IAAA,mBAAmC,EAAlC,YAAI,EAAE,UAAU,EAAV,+BAAU,CAAmB;IACxC,IAAI,WAAW,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;IACpC,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;IAC5B,KAAK,GAAG,cAAc,CAAC,WAAW,EAAE,EAAC,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAC,CAAC,CAAC;IACpE,OAAU,IAAI,SAAI,KAAO,CAAC;CAC7B;;ACRD;IASI,wBAAY,MAAY;QACpB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;KACzB;IARM,6BAAc,GAArB,UAAsB,GAAW,EAAE,MAAsB;QACrD,OAAO,cAAc,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;KACtC;IASL,qBAAC;CAAA;;ACbD;;AAEA,IAAI,SAAS,GAAG,UAAC,KAAK,EAAE,IAAK,IAAK,OAAA,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAA,CAAC;AAErD;IAAqCA,mCAAc;IAI/C,yBAAY,MAAkE;QAAlE,uBAAA,EAAA,UAAwB,OAAO,KAAK,KAAK,WAAW,IAAI,SAAS,CAAC;eAC1E,kBAAM,MAAM,CAAC;KAChB;IAEM,iCAAO,GAAd,UAAkB,GAAW,EAAE,OAA4B;QAElD,IAAA,uBAAM,EAAE,mBAAI,EAAE,uBAAM,EAAE,oBAAY,EAAZ,iCAAY,EAAE,yCAAe,CAAY;QAEpE,GAAG,GAAG,eAAe,CAAC,cAAc,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAClD,IAAI,WAAW,GAAG,CAAC,eAAe,KAAK,IAAI,IAAI,SAAS,MAAM,eAAe,KAAK,KAAK,IAAI,aAAa,CAAC,IAAI,MAAa,CAAC;;QAG3H,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;YAC5C,OAAO,GAAG,MAAM,CAAC;gBACb,cAAc,EAAE,kBAAkB;aACrC,EAAE,OAAO,CAAC,CAAC;YAEZ,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAC/B;QAED,IAAI,cAAc,GAAgB;YAC9B,MAAM,QAAA;YACN,IAAI,EAAE,IAAI;YACV,WAAW,aAAA;YACX,OAAO,SAAA;SACV,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC,IAAI,CAAC,UAAC,QAAkB;YAC7D,IAAI,QAAQ,CAAC,EAAE,EAAE;gBACb,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;aAC1B;iBAAM;gBACH,MAAM,QAAQ,CAAC;aAClB;SACJ,CAAC,CAAC;KACN;IACL,sBAAC;CAAA,CAvCoC,cAAc;;ACuBnD;IA0DI,gBAAY,OAAwB;QAtD1B,aAAQ,GAAmB;YACjC,OAAO,EAAE,cAAc;YACvB,MAAM,EAAE,aAAa;YACrB,UAAU,EAAE,IAAI,eAAe,EAAE;YACjC,aAAa,EAAE,EAAE;YACjB,OAAO,EAAE,IAAI,YAAY,EAAE;YAC3B,KAAK,EAAE,GAAG;SACb,CAAC;QAgDE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;KAC5B;IA/CD,sBAAW,2BAAO;aAAlB;YACU,IAAA,+BAAgB,CAAmB;YACzC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;gBACtB,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;aACpD;YACD,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACvC;;;OAAA;IAED,sBAAW,0BAAM;aAAjB;YACU,IAAA,6BAAM,CAAmB;YAC/B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACrB,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;aACnD;YACD,OAAO,MAAM,CAAC;SACjB;;;OAAA;IAED,sBAAW,8BAAU;aAArB;YACU,IAAA,qCAAU,CAAmB;YACnC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;gBACvB,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;aACvD;YACD,OAAO,UAAU,CAAC;SACrB;;;OAAA;IAED,sBAAW,iCAAa;aAAxB;YACU,IAAA,2CAAa,CAAmB;YACtC,OAAO,aAAa,IAAI,EAAE,CAAC;SAC9B;;;OAAA;IAED,sBAAW,2BAAO;aAAlB;YACU,IAAA,+BAAO,CAAmB;YAChC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;gBACpB,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;aACpD;YACD,OAAO,OAAO,CAAC;SAClB;;;OAAA;IAED,sBAAW,yBAAK;aAAhB;YACU,IAAA,2BAAK,CAAmB;YAC9B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;gBACpB,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;aAClD;YACD,OAAO,KAAK,CAAC;SAChB;;;OAAA;IAMM,2BAAU,GAAjB,UAAkB,OAAuB;QAAzC,iBAmEC;QAlEG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YACpB,OAAO;SACV;QACK,IAAA,yBAAO,EAAE,uBAAM,EAAE,+BAAU,EAAE,qCAAa,EAAE,yBAAO,EAAE,qBAAK,EAAE,6BAAS,CAAa;QACxF,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;gBACtB,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;aACpD;YACD,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;SACnC;QAGD,IAAI,MAAM,EAAE;YACR,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACrB,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;aACpD;YACD,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC;SACjC;QAED,IAAI,UAAU,EAAE;YACZ,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;gBACvB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;aACxD;YACD,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,UAAU,CAAC;SACzC;QAED,IAAI,aAAa,EAAE;YACf,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;gBAC/B,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;aAC3D;YACD,aAAa,CAAC,OAAO,CAAC,UAAC,OAAO;gBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;oBAC1C,MAAM,IAAI,KAAK,CAAC,6CAA2C,OAAS,CAAC,CAAC;iBACzE;aACJ,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,aAAa,CAAC;SAC/C;QAED,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;gBACpB,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;aACpD;YACD,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;SACnC;QAED,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;gBACpB,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;aAClD;YACD,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;SAC/B;QAED,IAAI,SAAS,EAAE;YACX,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;gBACtB,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;aACtD;YACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;gBACpC,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,EAAE,CAAC;aAChC;YACD,OAAO,CAAC,SAAS,EAAE,UAAC,QAAQ,EAAE,IAAI;gBAC9B,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;oBACvB,MAAM,IAAI,KAAK,CAAC,yBAAuB,IAAI,kBAAe,CAAC,CAAC;iBAC/D;gBACD,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;aAC5C,CAAC,CAAC;SACN;KACJ;IAEM,yBAAQ,GAAf,UAAgB,QAAgB;QACtB,IAAA,mCAAS,CAAmB;QAElC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE;YACzD,MAAM,IAAI,KAAK,CAAC,cAAY,QAAQ,2BAAwB,CAAC,CAAC;SACjE;QAED,IAAI,QAAQ,GAAyB,SAAS,CAAC,QAAQ,CAAC,CAAC;QAEzD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;YACvB,MAAM,IAAI,KAAK,CAAC,yCAAuC,QAAU,CAAC,CAAC;SACtE;QAED,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KAClD;IAEM,iCAAgB,GAAvB,UAAwB,QAAgB;QAC9B,IAAA,4BAAc,EAAd,mCAAc,CAAmB;QACvC,OAAO,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;KAChC;IAEM,wCAAuB,GAA9B,UAA+B,GAAW;QAChC,IAAA,kCAAa,CAAU;QACvB,IAAA,qCAAM,CAAyB;QACrC,IAAI,CAAC,MAAM,EAAE;YACT,OAAO,IAAI,CAAC;SACf;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7B,IAAI,UAAU,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,QAAQ,CAAC,UAAU,CAAC,EAAE;gBACtB,IAAI,iBAAiB,CAAC,GAAG,CAAC,KAAK,iBAAiB,CAAC,UAAoB,CAAC,EAAE;oBACpE,OAAO,IAAI,CAAC;iBACf;aACJ;iBAAM,IAAI,QAAQ,CAAC,UAAU,CAAC,EAAE;gBAC7B,IAAK,UAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;oBAClC,OAAO,IAAI,CAAC;iBACf;aACJ;SACJ;QAED,OAAO,KAAK,CAAC;KAChB;IA3KM,cAAO,GAAmB,CAAC,OAAO,OAAO,KAAK,WAAW,IAAI,OAAO,MAAM,OAAO,UAAU,KAAK,WAAW,IAAI,UAAU,CAAmB,CAAC;IA4KxJ,aAAC;CAAA;;ACxMD;IAA0CA,+BAAU;IAApD;;KAwBC;IApBG,sBAAc,6CAAoB;aAAlC;YACI,OAAO,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAC9C;;;OAAA;IAES,2BAAK,GAAf;QACI,IAAI,IAAI,CAAC,MAAM,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YACvE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;SACvB;KACJ;IAES,2BAAK,GAAf;QACI,IAAI,IAAI,CAAC,MAAM,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YACvE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;SACvB;KACJ;IAES,8BAAQ,GAAlB;QACI,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC;KAC9E;IAEL,kBAAC;CAAA,CAxByC,UAAU;;ACsBpD;IAAmCA,iCAAW;IAA9C;;KAqDC;IAjDG,sBAAc,qCAAU;aAAxB;YACI,OAAO,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;SAClF;;;OAAA;IAIS,yCAAiB,GAA3B,UAA4B,cAA2C;QAA3C,+BAAA,EAAA,mBAA2C;QACnE,cAAc,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,IAAI,GAAG,CAAC;QACrD,cAAc,CAAC,KAAK,GAAG,cAAc,CAAC,KAAK,IAAI,GAAG,CAAC;QACnD,iBAAM,iBAAiB,YAAC;YACpB,GAAG,EAAE,MAAM,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,cAAc,CAAC,MAAM,IAAI,GAAG,CAAC;YAC1E,IAAI,EAAE,MAAM,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,cAAc,CAAC,KAAK,IAAI,CAAC,CAAC;SAC1E,EAAE,cAAc,CAAC,CAAC;KACtB;IAEM,4BAAI,GAAX,UAAY,GAAW;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,oBAAoB,CAAW,CAAC;QACrF,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,UAAC,GAAG;YAC1B,OAAO,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SACtC,CAAC,CAAC;KACN;IAEO,8BAAM,GAAd;QAAA,iBAyBC;QAxBG,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACtC,IAAI,WAAW,GAAG,iBAAiB,CAAC,KAAI,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;YAEtE,IAAI,UAAU,GAAG,WAAW,CAAC;gBACzB,IAAI,KAAI,CAAC,QAAQ,EAAE,EAAE;oBACjB,aAAa,CAAC,UAAU,CAAC,CAAC;oBAC1B,OAAO,MAAM,CAAC,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC;iBACrD;gBAED,IAAI;oBACA,IAAI,GAAG,GAAW,iBAAiB,CAAC,KAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;oBAEtF,IAAI,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;wBAChC,KAAI,CAAC,KAAK,EAAE,CAAC;wBACb,aAAa,CAAC,UAAU,CAAC,CAAC;wBAC1B,OAAO,CAAC,GAAG,CAAC,CAAC;qBAChB;iBAEJ;gBAAC,OAAO,KAAK,EAAE;;;iBAGf;aACJ,EAAE,GAAG,CAAC,CAAC;SACX,CAAC,CAAC;KACN;IACL,oBAAC;CAAA,CArDkC,WAAW;;ACX9C;IAYI,sBAAY,OAAiB,EAAE,WAA+B;QAPpD,gBAAW,GAAW,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;QAQnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,OAAO,CAAC;QACzC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,WAAW,CAAC;KAC9C;IAES,iCAAU,GAApB,UAA+C,GAAW;QAA1D,iBAOC;QANO,IAAA,SAA6D,EAA3D,mBAAe,EAAE,cAAI,EAAE,4BAAW,EAAE,kCAAc,CAAU;QAClE,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,EAAE,WAAW,EAAE,cAAc,CAAC,CAAC;QAC3D,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,QAAQ;YAClC,KAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;YACnC,OAAO,QAAQ,CAAC;SACnB,CAAQ,CAAC;KACb;;;;;IAMS,0CAAmB,GAA7B,UAA8B,MAA2B;QAA3B,uBAAA,EAAA,WAA2B;QACrD,IAAI,MAAM,CAAC,KAAK,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACjC;KACJ;IAES,kCAAW,GAArB,UAAsB,WAA8B;QAApD,iBAaC;QAbqD,cAAyB;aAAzB,UAAyB,EAAzB,qBAAyB,EAAzB,IAAyB;YAAzB,6BAAyB;;QAC3E,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI,GAAG,MAAM,eAAI,IAAI,CAAC,CAAC;QAC3B,OAAO,CAAC,WAAW,EAAE,UAAC,UAAkB,EAAE,GAAW;YACjD,IAAI,CAAC,GAAG,EAAE;gBACN,OAAO;aACV;YACD,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,KAAI,CAAC,GAAG,CAAC,CAAC;YACnC,IAAI,KAAK,EAAE;gBACP,MAAM,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;aAC9B;SACJ,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;KACjB;IA/CM,mBAAM,GAA2D,WAAW,CAAC;IAkDxF,mBAAC;CAAA;;ACrED;;;AAGA,AA+BA;IAAoCA,kCAAY;IAAhD;QAAA,qEAuDC;QAnDa,wBAAkB,GAGxB;YACA,WAAW,EAAE,UAAU;SAC1B,CAAC;QAEQ,wBAAkB,GAKxB;YACA,WAAW,EAAE,UAAU;YACvB,WAAW,EAAE,aAAa;YAC1B,cAAc,EAAE,gBAAgB;SACnC,CAAC;;KAmCL;IAjCU,qCAAY,GAAnB,UAAuB,cAAuC;QAA9D,iBAMC;QALG,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,UAAC,oBAAiD;YAC/F,OAAO,KAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,UAAC,cAAqC;gBACxF,OAAO,KAAI,CAAC,cAAc,CAAI,cAAc,EAAE,cAAc,CAAC,CAAC;aACjE,CAAC,CAAC;SACN,CAAC,CAAC;KACN;IAES,wCAAe,GAAzB,UAA0B,EAAiD;YAA/C,sBAAQ,EAAE,cAAI,EAAE,gBAAK;QACvC,IAAA,4CAAkB,CAAU;QAClC,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC;QAChD,IAAI,OAAO,GAA2B;YAClC,IAAI,MAAA;YACJ,IAAI,MAAA;YACJ,QAAQ,UAAA;YACR,KAAK,OAAA;SACR,CAAC;QACF,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAA8B,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,EAA2D;gBAAzD,sBAAQ;YAAsD,OAAA,QAAQ;SAAA,CAAC,CAAC;KACtJ;IAES,uCAAc,GAAxB,UAAyB,oBAAiD;QACtE,IAAI,KAAK,GAAG,cAAc,CAAC,oBAAoB,EAAE,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;QACrE,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,UAAU,CAAwB,GAAG,CAAC,CAAC;KACtD;IAES,uCAAc,GAAxB,UAA4B,SAAgC,EAAE,cAAsC;QAC1F,IAAA,4CAAkB,CAAU;QAClC,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;QAC3D,cAAc,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAI,cAAc,CAAC,CAAC;KACnD;IAEL,qBAAC;CAAA,CAvDmC,YAAY;;;IChC5C,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;CAC/C;;mBCHiC,IAAY;IAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,UAAC,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM;QAClE,OAAO,MAAM,GAAG,MAAM,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC;KACjD,CAAC,CAAC;CACN;;ACJD;;;AAGA,AA0CA;IAAoCA,kCAAY;IAAhD;QAAA,qEAuEC;QA3Da,kBAAY,GAAqB,MAAM,CAAC;QAMxC,sBAAgB,GAAa,CAAC,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,eAAe,CAAC,CAAC;QAE9F,wBAAkB,GAKxB;YACA,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE,WAAW;YACrB,WAAW,EAAE,cAAc;SAC9B,CAAC;;KA0CL;IAnEG,sBAAc,iCAAK;aAAnB;YACQ,IAAA,SAAwD,EAAtD,mBAAgB,EAAhB,qCAAgB,EAAE,4BAAW,EAAE,kCAAc,CAAU;YAC7D,IAAI,WAAW,GAAW,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAC3D,IAAI,WAAW,KAAK,EAAE,EAAE;gBAAE,OAAO,KAAK,CAAQ,CAAC;aAAE;YACjD,OAAO,WAAW,GAAG,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,WAAW,CAAC;SACtF;;;OAAA;IAsBM,qCAAY,GAAnB,UAAuB,cAAsC;QAA7D,iBAMC;QALG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,YAAY,EAAE,CAAC;QAE1C,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,UAAC,cAAsE;YACrG,OAAO,KAAI,CAAC,cAAc,CAAI,cAAc,EAAE,cAAc,CAAC,CAAC;SACjE,CAAC,CAAC;KACN;IAES,uCAAc,GAAxB;QAAA,iBAeC;QAdO,IAAA,SAAyC,EAAvC,sCAAgB,EAAE,8BAAY,CAAU;QAC9C,IAAI,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,gBAAgB,IAAI,EAAE,EAAE,YAAY,IAAI,EAAE,CAAC,CAAC;QACjE,IAAI,MAAM,GAAa,EAAE,CAAC;QAE1B,OAAO,CAAC,IAAI,EAAE,UAAC,GAAW;YACtB,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAe,CAAC;YAC5C,IAAI,KAAK,GAAqB,KAAI,CAAC,QAAQ,CAAC,CAAC;YAC7C,IAAI,KAAK,IAAI,KAAK,CAAC,EAAE;gBAAE,MAAM,CAAC,IAAI,CAAI,GAAG,SAAI,KAAO,CAAC,CAAC;aAAE;SAC3D,CAAC,CAAC;QAEH,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAExD,OAAO,IAAI,CAAC,UAAU,CAAyD,GAAG,CAAC,CAAC;KACvF;IAEM,uCAAc,GAArB,UAAyB,SAAiE,EAAE,cAAsC;QAC9H,IAAI,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;YAC9C,OAAO,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,yHAAyH,CAAC,CAAC,CAAC;SACtK;QAED,IAAI,IAAI,CAAC,YAAY,KAAK,OAAO,EAAE;YAC/B,IAAI,KAAK,GAAI,SAAwC,CAAC,YAAY,CAAC;YACnE,OAAO,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,KAAK,OAAA,EAAE,QAAQ,EAAE,SAAS,EAAS,CAAC,CAAC;SACxE;QAEK,IAAA,4CAAkB,CAAU;QAClC,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;QAC3D,cAAc,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAI,cAAc,CAAC,CAAC;KACnD;IACL,qBAAC;CAAA,CAvEmC,YAAY;;ACnChD;IAAmCA,iCAAa;IAK5C,uBAAY,OAA+B;eACvC,kBAAM,OAAO,CAAC;KACjB;IAEM,gCAAQ,GAAf;QACI,IAAI,MAAM,CAAC;QACX,IAAI;YACA,IAAI,KAAK,GAAa,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC3C,IAAA,uBAAM,CAAW;YACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAM,EAAE,CAAC,EAAE,EAAE;gBACzB,IAAA,wBAAkC,EAAjC,WAAG,EAAE,aAAK,CAAwB;gBACvC,IAAI,GAAG,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,GAAG,EAAE;oBACzB,MAAM,GAAG,KAAK,CAAC;oBACf,MAAM;iBACT;aACJ;SACJ;QAAC,OAAO,CAAC,EAAE;YACR,MAAM,GAAG,iBAAM,QAAQ,WAAE,CAAC;SAC7B;QACD,OAAO,MAAM,CAAC;KACjB;IAEM,gCAAQ,GAAf,UAAgB,KAAa;QACzB,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,KAAK,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QACrF,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,MAAa,CAAC,CAAC;KACxC;IAEM,mCAAW,GAAlB;QACI,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;KACzB;IAEO,iCAAS,GAAjB,UAAkB,KAAsB,EAAE,MAAsB;QAC5D,IAAI;YACA,QAAQ,CAAC,MAAM,GAAG;gBACX,IAAI,CAAC,GAAG,SAAI,KAAO;gBACtB,MAAM,GAAG,aAAW,IAAI,IAAI,CAAC,MAAa,CAAC,CAAC,WAAW,EAAI,GAAG,EAAE;gBAChE,IAAI,CAAC,IAAI,GAAG,UAAQ,IAAI,CAAC,IAAM,GAAG,EAAE;aACvC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACf;QAAC,OAAO,CAAC,EAAE;YACR,iBAAM,QAAQ,YAAC,KAAe,CAAC,CAAC;SACnC;KACJ;IACL,oBAAC;CAAA,CA/CkC,aAAa;;ACNhD;IAAoCA,kCAAa;IAAjD;;KAyBC;IAvBU,iCAAQ,GAAf;QACI,IAAI;YACA,OAAO,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAW,CAAC;SACrD;QAAC,OAAO,CAAC,EAAE;YACR,OAAO,iBAAM,QAAQ,WAAE,CAAC;SAC3B;KACJ;IAEM,iCAAQ,GAAf,UAAgB,KAAa;QACzB,IAAI;YACA,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;SACtD;QAAC,OAAO,CAAC,EAAE;YACR,iBAAM,QAAQ,YAAC,KAAK,CAAC,CAAC;SACzB;KACJ;IAEM,oCAAW,GAAlB;QACI,IAAI;YACA,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvC;QAAC,OAAO,CAAC,EAAE;YACR,iBAAM,WAAW,WAAE,CAAC;SACvB;KACJ;IACL,qBAAC;CAAA,CAzBmC,aAAa;;ACGjD;IAII;QAAY,mBAA2B;aAA3B,UAA2B,EAA3B,qBAA2B,EAA3B,IAA2B;YAA3B,8BAA2B;;QAF7B,eAAU,GAAkB,EAAE,CAAC;QAGrC,IAAI,CAAC,EAAE,OAAP,IAAI,EAAO,SAAS,EAAE;KACzB;IAEM,2BAAI,GAAX,UAAY,KAAS;QACjB,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,UAAC,QAAQ;YAC9B,QAAQ,CAAC,KAAK,CAAC,CAAC;SACnB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;KACf;IAEM,yBAAE,GAAT;QAAA,iBAOC;QAPS,mBAA2B;aAA3B,UAA2B,EAA3B,qBAA2B,EAA3B,IAA2B;YAA3B,8BAA2B;;QACjC,OAAO,CAAC,SAAS,EAAE,UAAC,QAAQ;YACxB,IAAI,UAAU,CAAC,QAAQ,CAAC,EAAE;gBACtB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAClC;SACJ,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;KACf;IAEM,6BAAM,GAAb;QAAA,iBAQC;QARa,mBAA2B;aAA3B,UAA2B,EAA3B,qBAA2B,EAA3B,IAA2B;YAA3B,8BAA2B;;QACrC,OAAO,CAAC,SAAS,EAAE,UAAC,QAAQ;YACxB,IAAI,KAAK,GAAG,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC9C,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;gBACZ,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aACpC;SACJ,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;KACf;IACL,mBAAC;CAAA;;ACzBD;IAeI,oBAAY,OAAgC;QAAhC,wBAAA,EAAA,YAAgC;QAJpC,YAAO,GAAW,IAAI,MAAM,CAAC;QAE9B,aAAQ,GAA0B,IAAI,YAAY,EAAW,CAAC;QAIjE,IAAI,OAAO,CAAC,gBAAgB,KAAK,KAAK,EAAE;YACpC,OAAO,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAC9C;QAED,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KACxB;IAlBD,sBAAW,sBAAQ;aAAnB;YACI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBAClB,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,EAAC,gBAAgB,EAAE,KAAK,EAAC,CAAC,CAAC;aAC/D;YACD,OAAO,IAAI,CAAC,UAAU,CAAC;SAC1B;;;OAAA;IAeM,2BAAM,GAAb,UAAc,OAAuB;QACjC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC;KACf;IAEM,2BAAM,GAAb,UAAiB,IAAqB;QAAtC,iBAWC;QAVG,IAAI,OAAO,GAA2B;YAClC,IAAI,EAAED,0BAAkB,CAAC,MAAM;YAC/B,IAAI,MAAA;YACJ,YAAY,EAAE,IAAI;SACrB,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAI,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,EAAsC;gBAArC,sBAAQ,EAAE,gBAAK;YAClE,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACrB,OAAO,QAAQ,CAAC;SACnB,CAAC,CAAC;KACN;IAEM,2BAAM,GAAb,UAAiB,IAAqB,EAAE,MAAgB;QAAxD,iBAaC;QAZG,IAAI,OAAO,GAA2B;YAClC,IAAI,EAAEA,0BAAkB,CAAC,MAAM;YAC/B,IAAI,MAAA;YACJ,YAAY,EAAE,MAAM;SACvB,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAI,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,EAAsC;gBAArC,sBAAQ,EAAE,gBAAK;YAClE,IAAI,MAAM,EAAE;gBACR,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACxB;YACD,OAAO,QAAQ,CAAC;SACnB,CAAC,CAAC;KACN;IAEM,4BAAO,GAAd,UAAkB,IAAqB;QAAvC,iBAWC;QAVG,IAAI,OAAO,GAA2B;YAClC,IAAI,EAAEA,0BAAkB,CAAC,OAAO;YAChC,IAAI,MAAA;YACJ,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE;SACzB,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAI,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,EAA+B;gBAA9B,sBAAQ;YAC3D,KAAI,CAAC,WAAW,EAAE,CAAC;YACnB,OAAO,QAAQ,CAAC;SACnB,CAAC,CAAC;KACN;IAEM,iCAAY,GAAnB,UAAuB,QAAgB,EAAE,IAAqB;QAA9D,iBAYC;QAXG,IAAI,OAAO,GAA2B;YAClC,IAAI,EAAEA,0BAAkB,CAAC,YAAY;YACrC,IAAI,MAAA;YACJ,YAAY,EAAE,IAAI;YAClB,QAAQ,UAAA;SACX,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAI,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,EAAsC;gBAArC,sBAAQ,EAAE,gBAAK;YAClF,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACrB,OAAO,QAAQ,CAAC;SACnB,CAAC,CAAC;KACN;IAEM,yBAAI,GAAX,UAAe,QAAgB,EAAE,IAAqB;QAClD,IAAI,OAAO,GAA2B;YAClC,IAAI,EAAEA,0BAAkB,CAAC,IAAI;YAC7B,IAAI,MAAA;YACJ,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE;YACtB,QAAQ,UAAA;SACX,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAI,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,EAA+B;gBAA9B,sBAAQ;YAA2B,OAAA,QAAQ;SAAA,CAAC,CAAC;KACvH;IAEM,2BAAM,GAAb,UAAiB,QAAgB,EAAE,IAAqB;QACpD,IAAI,OAAO,GAA2B;YAClC,IAAI,EAAEA,0BAAkB,CAAC,MAAM;YAC/B,IAAI,EAAE,MAAM,CAAC,EAAC,QAAQ,UAAA,EAAC,EAAE,IAAI,CAAC;YAC9B,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE;SACzB,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAI,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,EAA+B;gBAA9B,sBAAQ;YAA2B,OAAA,QAAQ;SAAA,CAAC,CAAC;KACvG;IAEM,4BAAO,GAAd,UAAkB,IAAqB;QAAvC,iBAYC;QAXG,IAAI,OAAO,GAA2B;YAClC,IAAI,EAAEA,0BAAkB,CAAC,OAAO;YAChC,IAAI,MAAA;YACJ,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE;YACtB,YAAY,EAAE,IAAI;SACrB,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAI,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,EAAsC;gBAArC,gBAAK,EAAE,sBAAQ;YAClE,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACrB,OAAO,QAAQ,CAAC;SACnB,CAAC,CAAC;KACN;IAEM,oCAAe,GAAtB;QACI,IAAI,KAAK,GAAW,IAAI,CAAC,QAAQ,EAAE,CAAC;QACpC,OAAO,KAAK,GAAG,KAAK,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC;KAC1C;IAEM,6BAAQ,GAAf;QACI,IAAI,KAAK,GAAW,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACpD,IAAI,KAAK,GAAsB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAClD,IAAI,WAAW,CAAC;QAChB,IAAI;YACA,WAAW,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;SAClC;QAAC,OAAO,CAAC,EAAE;SACX;QAED,OAAO,WAAW,CAAC;KACtB;IAEM,6BAAQ,GAAf,UAAgB,KAAsB;QAElC,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;YACjB,IAAI,KAAK,GAAsB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;YAClD,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;SAC5B;QAED,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAe,CAAC,CAAC;QAC/C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5B;IAEM,gCAAW,GAAlB;QACI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC7B;;;;;;;IAQM,gCAAW,GAAlB,UAAmB,GAAW;QAC1B,OAAO,IAAI,CAAC,eAAe,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC;KAC9E;IACL,iBAAC;CAAA;;ACnKD,YAAe,UAAU,CAAC,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}