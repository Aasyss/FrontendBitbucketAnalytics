"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var extend_class_1 = require("../utils/extend-class");
var extend_1 = require("../utils/extend");
var for_each_1 = require("../utils/for-each");
var BaseProvider = /** @class */ (function () {
    function BaseProvider(adapter, dialogClass) {
        this.redirectUri = window.location.origin;
        this._adapter = this._adapter || adapter;
        this._dialog = this._dialog || dialogClass;
    }
    BaseProvider.prototype.openDialog = function (url) {
        var _this = this;
        var _a = this, Dialog = _a._dialog, name = _a.name, redirectUri = _a.redirectUri, displayOptions = _a.displayOptions;
        var dialog = new Dialog(name, redirectUri, displayOptions);
        return dialog.open(url).then(function (response) {
            _this.checkDialogResponse(response);
            return response;
        });
    };
    /**
     * this method can be overridden, for handling unique provider dialog errors
     * @param params
     */
    BaseProvider.prototype.checkDialogResponse = function (params) {
        if (params === void 0) { params = {}; }
        if (params.error) {
            throw new Error(params.error);
        }
    };
    BaseProvider.prototype.prepareData = function (requestKeys) {
        var _this = this;
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var params = {};
        var data = extend_1.default.apply(void 0, args);
        for_each_1.default(requestKeys, function (requestKey, key) {
            if (!key) {
                return;
            }
            var value = data[key] || _this[key];
            if (value) {
                params[requestKey] = value;
            }
        });
        return params;
    };
    BaseProvider.extend = extend_class_1.default;
    return BaseProvider;
}());
exports.BaseProvider = BaseProvider;
//# sourceMappingURL=base.js.map