import { PopupDialog } from './popup';
import { Directory } from '../interface';
export interface IBrowserDisplayOptions {
    channelmode?: 'yes' | 'no' | 1 | 0;
    directories?: 'yes' | 'no' | 1 | 0;
    fullscreen?: 'yes' | 'no' | 1 | 0;
    height?: number;
    left?: number;
    location?: 'yes' | 'no' | 1 | 0;
    menubar?: 'yes' | 'no' | 1 | 0;
    resizable?: 'yes' | 'no' | 1 | 0;
    scrollbars?: 'yes' | 'no' | 1 | 0;
    status?: 'yes' | 'no' | 1 | 0;
    titlebar?: 'yes' | 'no' | 1 | 0;
    toolbar?: 'yes' | 'no' | 1 | 0;
    top?: number;
    width?: number;
    [key: string]: any;
}
export interface IBrowserDialogOptions {
    displayOptions?: IBrowserDisplayOptions;
}
export declare class BrowserDialog extends PopupDialog {
    static extend: (options: IBrowserDialogOptions) => typeof BrowserDialog;
    protected readonly dialogName: string;
    protected displayOptions: IBrowserDisplayOptions;
    protected setDisplayOptions(displayOptions?: IBrowserDisplayOptions): void;
    open(url: string): Promise<Directory<any>>;
    private listen();
}
