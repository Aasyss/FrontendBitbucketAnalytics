import { IDialog } from './dialog';
import { Directory } from '../interface';
export interface IBaseDialogOptions {
    name?: string;
    redirectUri?: string;
    displayOptions?: Directory<any>;
}
export declare abstract class BaseDialog implements IDialog {
    static extend: (options: IBaseDialogOptions) => typeof BaseDialog;
    static parseUrl(url: string): Directory<any>;
    protected name: string;
    protected redirectUri: string;
    protected displayOptions: Directory<any>;
    constructor(name: string, redirectUri: string, displayOptions: Directory<any>);
    protected setDisplayOptions(...displayOptions: Directory<any>[]): void;
    abstract open(url: string): Promise<Directory<any>>;
}
